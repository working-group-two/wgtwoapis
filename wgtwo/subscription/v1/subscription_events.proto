// Copyright 2021 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
syntax = "proto3";

package wgtwo.subscription.v1;

import "wgtwo/annotations.proto";
import "wgtwo/common/v1/types.proto";
import "wgtwo/events/v1/events.proto";

option go_package = "github.com/working-group-two/wgtwoapis/wgtwo/subscriptions/v1";
option java_package = "com.wgtwo.api.subscription";
option java_outer_classname = "SubscriptionEventsProto";

service SubscriptionEventService {
  rpc StreamHandsetChangeEvents (StreamHandsetChangeEventsRequest) returns (stream StreamHandsetChangeEventsResponse) {
    option (scope) = "subscription.handset_details:read";
  }
  rpc AckHandsetChangeEvent (AckHandsetChangeEventRequest) returns (AckHandsetChangeEventResponse) {
    option (scope) = "subscription.handset_details:read";
  }
  rpc StreamCountryChangeEvents (StreamCountryChangeEventsRequest) returns (stream StreamCountryChangeEventsResponse) {
    option (scope) = "subscription.country_change:read";
  }
  rpc AckCountryChangeEvent (AckCountryChangeEventRequest) returns (AckCountryChangeEventResponse) {
    option (scope) = "subscription.country_change:read";
  }
}

message StreamHandsetChangeEventsRequest {
  wgtwo.events.v1.StreamConfiguration stream_configuration = 1;
}

message StreamHandsetChangeEventsResponse {
  wgtwo.events.v1.Metadata metadata = 1;
  HandsetChangeEvent handset_change_event = 2;
}

message AckHandsetChangeEventRequest {
  wgtwo.events.v1.AckInfo ack_info = 1;
}

message AckHandsetChangeEventResponse {
  wgtwo.events.v1.AckStatus ack_status = 1;
}

message StreamCountryChangeEventsRequest {
  wgtwo.events.v1.StreamConfiguration stream_configuration = 1;
}

message StreamCountryChangeEventsResponse {
  wgtwo.events.v1.Metadata metadata = 1;
  CountryChangeEvent country_change_event = 2;
}

message AckCountryChangeEventRequest {
  wgtwo.events.v1.AckInfo ack_info = 1;
}

message AckCountryChangeEventResponse {
  wgtwo.events.v1.AckStatus ack_status = 1;
}

message Handset {
  common.v1.ImeiSv imei_sv = 1;
}

message HandsetChangeEvent {
  Handset previous = 1;
  Handset current = 2;
  common.v1.Imsi imsi = 3;
}

message CountryChangeEvent {
  wgtwo.common.v1.Country previous = 1;
  wgtwo.common.v1.Country current = 2;
}
