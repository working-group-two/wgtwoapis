// Copyright 2022 [Working Group Two]/[Cisco Systems]
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: wgtwo/subscription/v0/network_info.proto

package v0

import (
	_ "github.com/working-group-two/wgtwoapis/wgtwo/annotations"
	v0 "github.com/working-group-two/wgtwoapis/wgtwo/common/v0"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	// Is the default value and will not be used.
	Code_CODE_UNSPECIFIED Code = 0
	// Indicates that the attachment was successful.
	Code_CODE_OK Code = 1
	// Currently not used.
	Code_CODE_ABSENT_PROFILE Code = 2
	// Currently not used.
	Code_CODE_ABSENT_SUBSCRIBER Code = 3
	// Indicates that the subscriber was not allowed to attach because it is not provisioned on the platform.
	Code_CODE_UNKNOWN_PROFILE Code = 4
	// Indicates that the subscriber was not allowed to attach because it is inactive/blocked.
	Code_CODE_BLOCKED_PROFILE Code = 5
	// Indicates that the subscriber was not allowed to attach because it either was missing the roaming services or
	// because the roaming profile of the subscriber did not allow the it to roam at that location.
	Code_CODE_ROAMING_NOT_ALLOWED Code = 6
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "CODE_UNSPECIFIED",
		1: "CODE_OK",
		2: "CODE_ABSENT_PROFILE",
		3: "CODE_ABSENT_SUBSCRIBER",
		4: "CODE_UNKNOWN_PROFILE",
		5: "CODE_BLOCKED_PROFILE",
		6: "CODE_ROAMING_NOT_ALLOWED",
	}
	Code_value = map[string]int32{
		"CODE_UNSPECIFIED":         0,
		"CODE_OK":                  1,
		"CODE_ABSENT_PROFILE":      2,
		"CODE_ABSENT_SUBSCRIBER":   3,
		"CODE_UNKNOWN_PROFILE":     4,
		"CODE_BLOCKED_PROFILE":     5,
		"CODE_ROAMING_NOT_ALLOWED": 6,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_wgtwo_subscription_v0_network_info_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_wgtwo_subscription_v0_network_info_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP(), []int{0}
}

type GetNetworkInfoForSubscriberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PhoneNumber   *v0.PhoneNumber        `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkInfoForSubscriberRequest) Reset() {
	*x = GetNetworkInfoForSubscriberRequest{}
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkInfoForSubscriberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInfoForSubscriberRequest) ProtoMessage() {}

func (x *GetNetworkInfoForSubscriberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkInfoForSubscriberRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkInfoForSubscriberRequest) Descriptor() ([]byte, []int) {
	return file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP(), []int{0}
}

func (x *GetNetworkInfoForSubscriberRequest) GetPhoneNumber() *v0.PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

type GetNetworkInfoForSubscriberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkInfos  []*NetworkInfo         `protobuf:"bytes,1,rep,name=network_infos,json=networkInfos,proto3" json:"network_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkInfoForSubscriberResponse) Reset() {
	*x = GetNetworkInfoForSubscriberResponse{}
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkInfoForSubscriberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkInfoForSubscriberResponse) ProtoMessage() {}

func (x *GetNetworkInfoForSubscriberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkInfoForSubscriberResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkInfoForSubscriberResponse) Descriptor() ([]byte, []int) {
	return file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP(), []int{1}
}

func (x *GetNetworkInfoForSubscriberResponse) GetNetworkInfos() []*NetworkInfo {
	if x != nil {
		return x.NetworkInfos
	}
	return nil
}

type GetAttachmentAttemptsForSubscriberRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PhoneNumber      *v0.PhoneNumber        `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	FilterByInterval *Interval              `protobuf:"bytes,2,opt,name=filter_by_interval,json=filterByInterval,proto3" json:"filter_by_interval,omitempty"`
	MaxAttempts      uint32                 `protobuf:"varint,3,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetAttachmentAttemptsForSubscriberRequest) Reset() {
	*x = GetAttachmentAttemptsForSubscriberRequest{}
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttachmentAttemptsForSubscriberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachmentAttemptsForSubscriberRequest) ProtoMessage() {}

func (x *GetAttachmentAttemptsForSubscriberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachmentAttemptsForSubscriberRequest.ProtoReflect.Descriptor instead.
func (*GetAttachmentAttemptsForSubscriberRequest) Descriptor() ([]byte, []int) {
	return file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP(), []int{2}
}

func (x *GetAttachmentAttemptsForSubscriberRequest) GetPhoneNumber() *v0.PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *GetAttachmentAttemptsForSubscriberRequest) GetFilterByInterval() *Interval {
	if x != nil {
		return x.FilterByInterval
	}
	return nil
}

func (x *GetAttachmentAttemptsForSubscriberRequest) GetMaxAttempts() uint32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

type GetAttachmentAttemptsForSubscriberResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AttachmentAttempts []*AttachmentAttempt   `protobuf:"bytes,1,rep,name=attachment_attempts,json=attachmentAttempts,proto3" json:"attachment_attempts,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetAttachmentAttemptsForSubscriberResponse) Reset() {
	*x = GetAttachmentAttemptsForSubscriberResponse{}
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttachmentAttemptsForSubscriberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachmentAttemptsForSubscriberResponse) ProtoMessage() {}

func (x *GetAttachmentAttemptsForSubscriberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachmentAttemptsForSubscriberResponse.ProtoReflect.Descriptor instead.
func (*GetAttachmentAttemptsForSubscriberResponse) Descriptor() ([]byte, []int) {
	return file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP(), []int{3}
}

func (x *GetAttachmentAttemptsForSubscriberResponse) GetAttachmentAttempts() []*AttachmentAttempt {
	if x != nil {
		return x.AttachmentAttempts
	}
	return nil
}

type Interval struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	After         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=after,proto3" json:"after,omitempty"`
	Before        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Interval) Reset() {
	*x = Interval{}
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP(), []int{4}
}

func (x *Interval) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *Interval) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

type AttachmentAttempt struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Iccid             *v0.Iccid              `protobuf:"bytes,1,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Imsi              *v0.Imsi               `protobuf:"bytes,2,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NetworkIdentity   *v0.NetworkIdentity    `protobuf:"bytes,4,opt,name=network_identity,json=networkIdentity,proto3" json:"network_identity,omitempty"`
	NetworkGeneration v0.NetworkGeneration   `protobuf:"varint,5,opt,name=network_generation,json=networkGeneration,proto3,enum=wgtwo.common.v0.NetworkGeneration" json:"network_generation,omitempty"`
	// TADIG code, if present.
	// May be empty.
	Tadig         *v0.Tadig `protobuf:"bytes,6,opt,name=tadig,proto3" json:"tadig,omitempty"`
	Status        *Status   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachmentAttempt) Reset() {
	*x = AttachmentAttempt{}
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachmentAttempt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentAttempt) ProtoMessage() {}

func (x *AttachmentAttempt) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentAttempt.ProtoReflect.Descriptor instead.
func (*AttachmentAttempt) Descriptor() ([]byte, []int) {
	return file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP(), []int{5}
}

func (x *AttachmentAttempt) GetIccid() *v0.Iccid {
	if x != nil {
		return x.Iccid
	}
	return nil
}

func (x *AttachmentAttempt) GetImsi() *v0.Imsi {
	if x != nil {
		return x.Imsi
	}
	return nil
}

func (x *AttachmentAttempt) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AttachmentAttempt) GetNetworkIdentity() *v0.NetworkIdentity {
	if x != nil {
		return x.NetworkIdentity
	}
	return nil
}

func (x *AttachmentAttempt) GetNetworkGeneration() v0.NetworkGeneration {
	if x != nil {
		return x.NetworkGeneration
	}
	return v0.NetworkGeneration(0)
}

func (x *AttachmentAttempt) GetTadig() *v0.Tadig {
	if x != nil {
		return x.Tadig
	}
	return nil
}

func (x *AttachmentAttempt) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type NetworkInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Iccid             *v0.Iccid              `protobuf:"bytes,1,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Imsi              *v0.Imsi               `protobuf:"bytes,2,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NetworkIdentity   *v0.NetworkIdentity    `protobuf:"bytes,4,opt,name=network_identity,json=networkIdentity,proto3" json:"network_identity,omitempty"`
	NetworkGeneration v0.NetworkGeneration   `protobuf:"varint,5,opt,name=network_generation,json=networkGeneration,proto3,enum=wgtwo.common.v0.NetworkGeneration" json:"network_generation,omitempty"`
	// TADIG code, if present
	// May be empty
	Tadig *v0.Tadig `protobuf:"bytes,6,opt,name=tadig,proto3" json:"tadig,omitempty"`
	// MSC, if present
	// May be empty
	Msc *v0.GlobalTitle `protobuf:"bytes,7,opt,name=msc,proto3" json:"msc,omitempty"`
	// VLR, if present
	// May be empty
	Vlr *v0.GlobalTitle `protobuf:"bytes,8,opt,name=vlr,proto3" json:"vlr,omitempty"`
	// SGSN, if present
	// May be empty
	Sgsn *v0.GlobalTitle `protobuf:"bytes,9,opt,name=sgsn,proto3" json:"sgsn,omitempty"`
	// MME, if present
	// May be empty
	Mme           *v0.Fqdn `protobuf:"bytes,10,opt,name=mme,proto3" json:"mme,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInfo) Reset() {
	*x = NetworkInfo{}
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInfo) ProtoMessage() {}

func (x *NetworkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInfo.ProtoReflect.Descriptor instead.
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkInfo) GetIccid() *v0.Iccid {
	if x != nil {
		return x.Iccid
	}
	return nil
}

func (x *NetworkInfo) GetImsi() *v0.Imsi {
	if x != nil {
		return x.Imsi
	}
	return nil
}

func (x *NetworkInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NetworkInfo) GetNetworkIdentity() *v0.NetworkIdentity {
	if x != nil {
		return x.NetworkIdentity
	}
	return nil
}

func (x *NetworkInfo) GetNetworkGeneration() v0.NetworkGeneration {
	if x != nil {
		return x.NetworkGeneration
	}
	return v0.NetworkGeneration(0)
}

func (x *NetworkInfo) GetTadig() *v0.Tadig {
	if x != nil {
		return x.Tadig
	}
	return nil
}

func (x *NetworkInfo) GetMsc() *v0.GlobalTitle {
	if x != nil {
		return x.Msc
	}
	return nil
}

func (x *NetworkInfo) GetVlr() *v0.GlobalTitle {
	if x != nil {
		return x.Vlr
	}
	return nil
}

func (x *NetworkInfo) GetSgsn() *v0.GlobalTitle {
	if x != nil {
		return x.Sgsn
	}
	return nil
}

func (x *NetworkInfo) GetMme() *v0.Fqdn {
	if x != nil {
		return x.Mme
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          Code                   `protobuf:"varint,1,opt,name=code,proto3,enum=wgtwo.subscription.v0.Code" json:"code,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_subscription_v0_network_info_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP(), []int{7}
}

func (x *Status) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_CODE_UNSPECIFIED
}

func (x *Status) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_wgtwo_subscription_v0_network_info_proto protoreflect.FileDescriptor

const file_wgtwo_subscription_v0_network_info_proto_rawDesc = "" +
	"\n" +
	"(wgtwo/subscription/v0/network_info.proto\x12\x15wgtwo.subscription.v0\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#wgtwo/annotations/annotations.proto\x1a!wgtwo/common/v0/phonenumber.proto\x1a\x1bwgtwo/common/v0/types.proto\"e\n" +
	"\"GetNetworkInfoForSubscriberRequest\x12?\n" +
	"\fphone_number\x18\x01 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\vphoneNumber\"n\n" +
	"#GetNetworkInfoForSubscriberResponse\x12G\n" +
	"\rnetwork_infos\x18\x01 \x03(\v2\".wgtwo.subscription.v0.NetworkInfoR\fnetworkInfos\"\xde\x01\n" +
	")GetAttachmentAttemptsForSubscriberRequest\x12?\n" +
	"\fphone_number\x18\x01 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\vphoneNumber\x12M\n" +
	"\x12filter_by_interval\x18\x02 \x01(\v2\x1f.wgtwo.subscription.v0.IntervalR\x10filterByInterval\x12!\n" +
	"\fmax_attempts\x18\x03 \x01(\rR\vmaxAttempts\"\x87\x01\n" +
	"*GetAttachmentAttemptsForSubscriberResponse\x12Y\n" +
	"\x13attachment_attempts\x18\x01 \x03(\v2(.wgtwo.subscription.v0.AttachmentAttemptR\x12attachmentAttempts\"p\n" +
	"\bInterval\x120\n" +
	"\x05after\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x05after\x122\n" +
	"\x06before\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\"\xab\x03\n" +
	"\x11AttachmentAttempt\x12,\n" +
	"\x05iccid\x18\x01 \x01(\v2\x16.wgtwo.common.v0.IccidR\x05iccid\x12)\n" +
	"\x04imsi\x18\x02 \x01(\v2\x15.wgtwo.common.v0.ImsiR\x04imsi\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12K\n" +
	"\x10network_identity\x18\x04 \x01(\v2 .wgtwo.common.v0.NetworkIdentityR\x0fnetworkIdentity\x12Q\n" +
	"\x12network_generation\x18\x05 \x01(\x0e2\".wgtwo.common.v0.NetworkGenerationR\x11networkGeneration\x12,\n" +
	"\x05tadig\x18\x06 \x01(\v2\x16.wgtwo.common.v0.TadigR\x05tadig\x125\n" +
	"\x06status\x18\a \x01(\v2\x1d.wgtwo.subscription.v0.StatusR\x06status\"\xa9\x04\n" +
	"\vNetworkInfo\x12,\n" +
	"\x05iccid\x18\x01 \x01(\v2\x16.wgtwo.common.v0.IccidR\x05iccid\x12)\n" +
	"\x04imsi\x18\x02 \x01(\v2\x15.wgtwo.common.v0.ImsiR\x04imsi\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12K\n" +
	"\x10network_identity\x18\x04 \x01(\v2 .wgtwo.common.v0.NetworkIdentityR\x0fnetworkIdentity\x12Q\n" +
	"\x12network_generation\x18\x05 \x01(\x0e2\".wgtwo.common.v0.NetworkGenerationR\x11networkGeneration\x12,\n" +
	"\x05tadig\x18\x06 \x01(\v2\x16.wgtwo.common.v0.TadigR\x05tadig\x12.\n" +
	"\x03msc\x18\a \x01(\v2\x1c.wgtwo.common.v0.GlobalTitleR\x03msc\x12.\n" +
	"\x03vlr\x18\b \x01(\v2\x1c.wgtwo.common.v0.GlobalTitleR\x03vlr\x120\n" +
	"\x04sgsn\x18\t \x01(\v2\x1c.wgtwo.common.v0.GlobalTitleR\x04sgsn\x12'\n" +
	"\x03mme\x18\n" +
	" \x01(\v2\x15.wgtwo.common.v0.FqdnR\x03mme\"[\n" +
	"\x06Status\x12/\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1b.wgtwo.subscription.v0.CodeR\x04code\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription*\xb0\x01\n" +
	"\x04Code\x12\x14\n" +
	"\x10CODE_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aCODE_OK\x10\x01\x12\x17\n" +
	"\x13CODE_ABSENT_PROFILE\x10\x02\x12\x1a\n" +
	"\x16CODE_ABSENT_SUBSCRIBER\x10\x03\x12\x18\n" +
	"\x14CODE_UNKNOWN_PROFILE\x10\x04\x12\x18\n" +
	"\x14CODE_BLOCKED_PROFILE\x10\x05\x12\x1c\n" +
	"\x18CODE_ROAMING_NOT_ALLOWED\x10\x062\xad\x03\n" +
	"\x12NetworkInfoService\x12\xbf\x01\n" +
	"\x1bGetNetworkInfoForSubscriber\x129.wgtwo.subscription.v0.GetNetworkInfoForSubscriberRequest\x1a:.wgtwo.subscription.v0.GetNetworkInfoForSubscriberResponse\")\xea\xb5\x18%subscription.network_information:read\x12\xd4\x01\n" +
	"\"GetAttachmentAttemptsForSubscriber\x12@.wgtwo.subscription.v0.GetAttachmentAttemptsForSubscriberRequest\x1aA.wgtwo.subscription.v0.GetAttachmentAttemptsForSubscriberResponse\")\xea\xb5\x18%subscription.network_information:readB\xe2\x01\n" +
	"\x19com.wgtwo.subscription.v0B\x10NetworkInfoProtoP\x01Z=github.com/working-group-two/wgtwoapis/wgtwo/subscriptions/v0\xa2\x02\x03WSV\xaa\x02\x15Wgtwo.Subscription.V0\xca\x02\x15Wgtwo\\Subscription\\V0\xe2\x02!Wgtwo\\Subscription\\V0\\GPBMetadata\xea\x02\x17Wgtwo::Subscription::V0b\x06proto3"

var (
	file_wgtwo_subscription_v0_network_info_proto_rawDescOnce sync.Once
	file_wgtwo_subscription_v0_network_info_proto_rawDescData []byte
)

func file_wgtwo_subscription_v0_network_info_proto_rawDescGZIP() []byte {
	file_wgtwo_subscription_v0_network_info_proto_rawDescOnce.Do(func() {
		file_wgtwo_subscription_v0_network_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wgtwo_subscription_v0_network_info_proto_rawDesc), len(file_wgtwo_subscription_v0_network_info_proto_rawDesc)))
	})
	return file_wgtwo_subscription_v0_network_info_proto_rawDescData
}

var file_wgtwo_subscription_v0_network_info_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wgtwo_subscription_v0_network_info_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_wgtwo_subscription_v0_network_info_proto_goTypes = []any{
	(Code)(0), // 0: wgtwo.subscription.v0.Code
	(*GetNetworkInfoForSubscriberRequest)(nil),         // 1: wgtwo.subscription.v0.GetNetworkInfoForSubscriberRequest
	(*GetNetworkInfoForSubscriberResponse)(nil),        // 2: wgtwo.subscription.v0.GetNetworkInfoForSubscriberResponse
	(*GetAttachmentAttemptsForSubscriberRequest)(nil),  // 3: wgtwo.subscription.v0.GetAttachmentAttemptsForSubscriberRequest
	(*GetAttachmentAttemptsForSubscriberResponse)(nil), // 4: wgtwo.subscription.v0.GetAttachmentAttemptsForSubscriberResponse
	(*Interval)(nil),              // 5: wgtwo.subscription.v0.Interval
	(*AttachmentAttempt)(nil),     // 6: wgtwo.subscription.v0.AttachmentAttempt
	(*NetworkInfo)(nil),           // 7: wgtwo.subscription.v0.NetworkInfo
	(*Status)(nil),                // 8: wgtwo.subscription.v0.Status
	(*v0.PhoneNumber)(nil),        // 9: wgtwo.common.v0.PhoneNumber
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*v0.Iccid)(nil),              // 11: wgtwo.common.v0.Iccid
	(*v0.Imsi)(nil),               // 12: wgtwo.common.v0.Imsi
	(*v0.NetworkIdentity)(nil),    // 13: wgtwo.common.v0.NetworkIdentity
	(v0.NetworkGeneration)(0),     // 14: wgtwo.common.v0.NetworkGeneration
	(*v0.Tadig)(nil),              // 15: wgtwo.common.v0.Tadig
	(*v0.GlobalTitle)(nil),        // 16: wgtwo.common.v0.GlobalTitle
	(*v0.Fqdn)(nil),               // 17: wgtwo.common.v0.Fqdn
}
var file_wgtwo_subscription_v0_network_info_proto_depIdxs = []int32{
	9,  // 0: wgtwo.subscription.v0.GetNetworkInfoForSubscriberRequest.phone_number:type_name -> wgtwo.common.v0.PhoneNumber
	7,  // 1: wgtwo.subscription.v0.GetNetworkInfoForSubscriberResponse.network_infos:type_name -> wgtwo.subscription.v0.NetworkInfo
	9,  // 2: wgtwo.subscription.v0.GetAttachmentAttemptsForSubscriberRequest.phone_number:type_name -> wgtwo.common.v0.PhoneNumber
	5,  // 3: wgtwo.subscription.v0.GetAttachmentAttemptsForSubscriberRequest.filter_by_interval:type_name -> wgtwo.subscription.v0.Interval
	6,  // 4: wgtwo.subscription.v0.GetAttachmentAttemptsForSubscriberResponse.attachment_attempts:type_name -> wgtwo.subscription.v0.AttachmentAttempt
	10, // 5: wgtwo.subscription.v0.Interval.after:type_name -> google.protobuf.Timestamp
	10, // 6: wgtwo.subscription.v0.Interval.before:type_name -> google.protobuf.Timestamp
	11, // 7: wgtwo.subscription.v0.AttachmentAttempt.iccid:type_name -> wgtwo.common.v0.Iccid
	12, // 8: wgtwo.subscription.v0.AttachmentAttempt.imsi:type_name -> wgtwo.common.v0.Imsi
	10, // 9: wgtwo.subscription.v0.AttachmentAttempt.timestamp:type_name -> google.protobuf.Timestamp
	13, // 10: wgtwo.subscription.v0.AttachmentAttempt.network_identity:type_name -> wgtwo.common.v0.NetworkIdentity
	14, // 11: wgtwo.subscription.v0.AttachmentAttempt.network_generation:type_name -> wgtwo.common.v0.NetworkGeneration
	15, // 12: wgtwo.subscription.v0.AttachmentAttempt.tadig:type_name -> wgtwo.common.v0.Tadig
	8,  // 13: wgtwo.subscription.v0.AttachmentAttempt.status:type_name -> wgtwo.subscription.v0.Status
	11, // 14: wgtwo.subscription.v0.NetworkInfo.iccid:type_name -> wgtwo.common.v0.Iccid
	12, // 15: wgtwo.subscription.v0.NetworkInfo.imsi:type_name -> wgtwo.common.v0.Imsi
	10, // 16: wgtwo.subscription.v0.NetworkInfo.timestamp:type_name -> google.protobuf.Timestamp
	13, // 17: wgtwo.subscription.v0.NetworkInfo.network_identity:type_name -> wgtwo.common.v0.NetworkIdentity
	14, // 18: wgtwo.subscription.v0.NetworkInfo.network_generation:type_name -> wgtwo.common.v0.NetworkGeneration
	15, // 19: wgtwo.subscription.v0.NetworkInfo.tadig:type_name -> wgtwo.common.v0.Tadig
	16, // 20: wgtwo.subscription.v0.NetworkInfo.msc:type_name -> wgtwo.common.v0.GlobalTitle
	16, // 21: wgtwo.subscription.v0.NetworkInfo.vlr:type_name -> wgtwo.common.v0.GlobalTitle
	16, // 22: wgtwo.subscription.v0.NetworkInfo.sgsn:type_name -> wgtwo.common.v0.GlobalTitle
	17, // 23: wgtwo.subscription.v0.NetworkInfo.mme:type_name -> wgtwo.common.v0.Fqdn
	0,  // 24: wgtwo.subscription.v0.Status.code:type_name -> wgtwo.subscription.v0.Code
	1,  // 25: wgtwo.subscription.v0.NetworkInfoService.GetNetworkInfoForSubscriber:input_type -> wgtwo.subscription.v0.GetNetworkInfoForSubscriberRequest
	3,  // 26: wgtwo.subscription.v0.NetworkInfoService.GetAttachmentAttemptsForSubscriber:input_type -> wgtwo.subscription.v0.GetAttachmentAttemptsForSubscriberRequest
	2,  // 27: wgtwo.subscription.v0.NetworkInfoService.GetNetworkInfoForSubscriber:output_type -> wgtwo.subscription.v0.GetNetworkInfoForSubscriberResponse
	4,  // 28: wgtwo.subscription.v0.NetworkInfoService.GetAttachmentAttemptsForSubscriber:output_type -> wgtwo.subscription.v0.GetAttachmentAttemptsForSubscriberResponse
	27, // [27:29] is the sub-list for method output_type
	25, // [25:27] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_wgtwo_subscription_v0_network_info_proto_init() }
func file_wgtwo_subscription_v0_network_info_proto_init() {
	if File_wgtwo_subscription_v0_network_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wgtwo_subscription_v0_network_info_proto_rawDesc), len(file_wgtwo_subscription_v0_network_info_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wgtwo_subscription_v0_network_info_proto_goTypes,
		DependencyIndexes: file_wgtwo_subscription_v0_network_info_proto_depIdxs,
		EnumInfos:         file_wgtwo_subscription_v0_network_info_proto_enumTypes,
		MessageInfos:      file_wgtwo_subscription_v0_network_info_proto_msgTypes,
	}.Build()
	File_wgtwo_subscription_v0_network_info_proto = out.File
	file_wgtwo_subscription_v0_network_info_proto_goTypes = nil
	file_wgtwo_subscription_v0_network_info_proto_depIdxs = nil
}
