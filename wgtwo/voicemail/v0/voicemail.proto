// Copyright 2020 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
 * The voicemail media API allows manipulation of voicemail belonging to a given subscriber.
 */

syntax = "proto3";

package wgtwo.voicemail.v0;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "wgtwo/annotations/annotations.proto";
import "wgtwo/common/v0/phonenumber.proto";

option go_package = "github.com/working-group-two/wgtwoapis/wgtwo/voicemail/v0";
option java_package = "com.wgtwo.api.v0.voicemail";
option java_outer_classname = "VoicemailProto";

service VoicemailMediaService {

  /**
   * Receive metadata for each voicemail available for a given MSISDN.
   * The metadata contains information about the corresponding voicemail including its ID,
   * allowing the user to fetch the voicemail media file.
   *
   * Client-side errors:
   * - INVALID ARGUMENT: Invalid MSISDN
   * - INTERNAL: DB error
   */
  rpc GetAllVoicemailMetadata (GetAllVoicemailMetadataRequest) returns (GetAllVoicemailMetadataResponse) {
    option (scope) = "voicemail.get";
  }

  /**
   * Receive voicemail media file corresponding to the given voicemail ID.
   *
   * Client-side errors:
   * - INVALID ARGUMENT: Invalid voicemail ID
   * - NOT FOUND: Voicemail not found
   *
   * Server-side errors:
   * - INTERNAL: Voicemail file is too big to be returned
   * - INTERNAL: DB error
   */
  rpc GetVoicemail (GetVoicemailRequest) returns (GetVoicemailResponse) {
    option (scope) = "voicemail.get";
  }

  /**
   * Mark as read the voicemail corresponding to the given voicemail ID.
   * This updates the "played" metadata of the voicemail to true.
   *
   * Client-side errors:
   * - INVALID ARGUMENT: Invalid voicemail ID
   * - NOT FOUND: Voicemail not found
   *
   * Server-side errors:
   * - INTERNAL: DB error
   */
  rpc MarkVoicemailAsRead (MarkVoicemailAsReadRequest) returns (MarkVoicemailAsReadResponse) {
    option (scope) = "voicemail.update";
  }

  /**
   * Delete the voicemail corresponding to the given voicemail ID.
   * The voicemail media file and its metadata will be deleted.
   *
   * Client-side errors:
   * - INVALID ARGUMENT: Invalid voicemail ID
   * - NOT FOUND: Voicemail not found
   *
   * Server-side errors:
   * - INTERNAL: DB error
   */
  rpc DeleteVoicemail (DeleteVoicemailRequest) returns (DeleteVoicemailResponse) {
    option (scope) = "voicemail.delete";
  }

  /**
 * Resets the voicemail greeting of the given subscriber (MSISDN).
 * The voicemail greeting (media file) will be deleted.
 *
 * Client-side errors:
 * - INVALID ARGUMENT: Invalid MSISDN
 *
 * Server-side errors:
 * - INTERNAL: DB error
 */
  rpc ResetVoicemailGreeting (ResetVoicemailGreetingRequest) returns (ResetVoicemailGreetingResponse) {
    option (scope) = "voicemail.update";
  }
}

message VoicemailMetadata {
  /**
   * The ID of the voicemail. (UUID format)
   */
  string voicemail_id = 1;

  /**
   * The MSISDN of the receiver.
   */
  wgtwo.common.v0.PhoneNumber to = 2;

  /**
   * The MSISDN of the sender.
   */
  wgtwo.common.v0.PhoneNumber from = 3;

  /**
   * The length of the voicemail media file in seconds.
   */
  google.protobuf.Duration duration = 4;

  /**
   * Whether or not the voicemail media file has been played.
   */
  bool played = 5;

  /**
   * The creation date (epoch in seconds) of the voicemail media file.
   */
  google.protobuf.Timestamp created = 6;

  /**
   * The expiry date (epoch in seconds) of the voicemail media file.
   * 7 days from the moment the voicemail is created.
   */
  google.protobuf.Timestamp expires = 7;
}

/**
 * Request object to get metadata for all voicemails.
 */
message GetAllVoicemailMetadataRequest {
  /**
   * The MSISDN of the receiver.
   */
  wgtwo.common.v0.PhoneNumber to = 1;
}

/**
 * Response object for getting metadata for all voicemails.
 */
message GetAllVoicemailMetadataResponse {
  repeated VoicemailMetadata metadata = 1;
}

/**
 * Request object for getting a voicemail.
 */
message GetVoicemailRequest {
  /**
   * The ID of the voicemail. (UUID format)
   */
  string voicemail_id = 1;
}

/**
 * Response object for getting a voicemail.
 */
message GetVoicemailResponse {
  /**
   * The voicemail media file in .wav format.
   */
  VoicemailMetadata metadata = 1;
  oneof bytes {
    bytes wav = 2;
  }
}

/**
 * Request object to mark a voicemail as read.
 */
message MarkVoicemailAsReadRequest {
  /**
   * The ID of the voicemail. (UUID format)
   */
  string voicemail_id = 1;
}

/**
 * Response object for successfully marking a voicemail as read.
 */
message MarkVoicemailAsReadResponse {
}

/**
 * Request object to delete a voicemail.
 */
message DeleteVoicemailRequest {
  /**
   * The ID of the voicemail. (UUID format)
   */
  string voicemail_id = 1;
}

/**
 * Response object for a successful deletion of a voicemail.
 */
message DeleteVoicemailResponse {
}

/**
 * Request object to reset the voicemail greeting of a user.
 */
message ResetVoicemailGreetingRequest {
  /**
   * The MSISDN of the subscriber.
   */
  wgtwo.common.v0.PhoneNumber subscriber = 1;
}

/**
 * Response object for a successful voicemail greeting reset.
 */
message ResetVoicemailGreetingResponse {
}
