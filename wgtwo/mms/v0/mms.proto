// Copyright 2020 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package wgtwo.mms.v0;

import "wgtwo/annotations/annotations.proto";
import "wgtwo/common/v0/phonenumber.proto";

option go_package = "github.com/working-group-two/wgtwoapis/wgtwo/mms/v0";
option java_package = "com.wgtwo.api.v0.mms";
option java_outer_classname = "MmsProto";

service MmsService {
  rpc SendMessageToSubscriber (SendMessageToSubscriberRequest) returns (SendResponse) {
    option (scope) = "mms.send.to_subscriber";
  }
  rpc SendMessageFromSubscriber (SendMessageFromSubscriberRequest) returns (SendResponse) {
    option (scope) = "mms.send.from_subscriber";
  }
}

message MessageContent {
  oneof content {
    AudioContent audio = 1;
    TextContent text = 2;
    ImageContent image = 3;
  }
}

message AudioContent {
  oneof content {
    bytes mp3 = 1;
    bytes opus = 2;
    bytes amr = 3;
    bytes wav = 4;
  }
}

message TextContent {
  string text = 1;
}

message ImageContent {
  oneof content {
    bytes png = 1;
    bytes jpg = 2;
  }
}

message SendMessageToSubscriberRequest {
  repeated MessageContent message_content = 1;

  oneof from_address {
    wgtwo.common.v0.PhoneNumber from_e164 = 2;
    wgtwo.common.v0.TextAddress from_text_address = 3;
  }

  wgtwo.common.v0.PhoneNumber to_subscriber = 5;
}

message SendMessageFromSubscriberRequest {
  repeated MessageContent message_content = 1;

  wgtwo.common.v0.PhoneNumber from_subscriber = 2;

  wgtwo.common.v0.PhoneNumber to_e164 = 3;
}

message SendResponse {
  string request_id = 1;

  enum SendStatus {
    UNKNOWN = 0;
    SEND_OK = 1;
    SEND_REJECT = 2;
    SEND_ERROR = 3;
  }
  SendStatus status = 2;

  string description = 3;
}
