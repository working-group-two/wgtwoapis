// Copyright 2020 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: wgtwo/callforward/v0/callforward.proto

package v0

import (
	_ "github.com/working-group-two/wgtwoapis/wgtwo/annotations"
	v0 "github.com/working-group-two/wgtwoapis/wgtwo/common/v0"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CallForwardingResponse_Status int32

const (
	CallForwardingResponse_UNKNOWN  CallForwardingResponse_Status = 0
	CallForwardingResponse_ACCEPTED CallForwardingResponse_Status = 1
	CallForwardingResponse_REJECTED CallForwardingResponse_Status = 2
)

// Enum value maps for CallForwardingResponse_Status.
var (
	CallForwardingResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "ACCEPTED",
		2: "REJECTED",
	}
	CallForwardingResponse_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"ACCEPTED": 1,
		"REJECTED": 2,
	}
)

func (x CallForwardingResponse_Status) Enum() *CallForwardingResponse_Status {
	p := new(CallForwardingResponse_Status)
	*p = x
	return p
}

func (x CallForwardingResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallForwardingResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_wgtwo_callforward_v0_callforward_proto_enumTypes[0].Descriptor()
}

func (CallForwardingResponse_Status) Type() protoreflect.EnumType {
	return &file_wgtwo_callforward_v0_callforward_proto_enumTypes[0]
}

func (x CallForwardingResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallForwardingResponse_Status.Descriptor instead.
func (CallForwardingResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{9, 0}
}

type DisableCallForwardingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriber *v0.PhoneNumber `protobuf:"bytes,1,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
}

func (x *DisableCallForwardingRequest) Reset() {
	*x = DisableCallForwardingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableCallForwardingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableCallForwardingRequest) ProtoMessage() {}

func (x *DisableCallForwardingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableCallForwardingRequest.ProtoReflect.Descriptor instead.
func (*DisableCallForwardingRequest) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{0}
}

func (x *DisableCallForwardingRequest) GetSubscriber() *v0.PhoneNumber {
	if x != nil {
		return x.Subscriber
	}
	return nil
}

type NumberCallForwardingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriber *v0.PhoneNumber `protobuf:"bytes,1,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
	// Types that are assignable to Type:
	//	*NumberCallForwardingRequest_Unconditional
	//	*NumberCallForwardingRequest_Conditional
	Type isNumberCallForwardingRequest_Type `protobuf_oneof:"type"`
}

func (x *NumberCallForwardingRequest) Reset() {
	*x = NumberCallForwardingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberCallForwardingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberCallForwardingRequest) ProtoMessage() {}

func (x *NumberCallForwardingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberCallForwardingRequest.ProtoReflect.Descriptor instead.
func (*NumberCallForwardingRequest) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{1}
}

func (x *NumberCallForwardingRequest) GetSubscriber() *v0.PhoneNumber {
	if x != nil {
		return x.Subscriber
	}
	return nil
}

func (m *NumberCallForwardingRequest) GetType() isNumberCallForwardingRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *NumberCallForwardingRequest) GetUnconditional() *Unconditional {
	if x, ok := x.GetType().(*NumberCallForwardingRequest_Unconditional); ok {
		return x.Unconditional
	}
	return nil
}

func (x *NumberCallForwardingRequest) GetConditional() *Conditional {
	if x, ok := x.GetType().(*NumberCallForwardingRequest_Conditional); ok {
		return x.Conditional
	}
	return nil
}

type isNumberCallForwardingRequest_Type interface {
	isNumberCallForwardingRequest_Type()
}

type NumberCallForwardingRequest_Unconditional struct {
	Unconditional *Unconditional `protobuf:"bytes,2,opt,name=unconditional,proto3,oneof"`
}

type NumberCallForwardingRequest_Conditional struct {
	Conditional *Conditional `protobuf:"bytes,3,opt,name=conditional,proto3,oneof"`
}

func (*NumberCallForwardingRequest_Unconditional) isNumberCallForwardingRequest_Type() {}

func (*NumberCallForwardingRequest_Conditional) isNumberCallForwardingRequest_Type() {}

type Unconditional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardToNumber *v0.PhoneNumber `protobuf:"bytes,1,opt,name=forward_to_number,json=forwardToNumber,proto3" json:"forward_to_number,omitempty"`
}

func (x *Unconditional) Reset() {
	*x = Unconditional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unconditional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unconditional) ProtoMessage() {}

func (x *Unconditional) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unconditional.ProtoReflect.Descriptor instead.
func (*Unconditional) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{2}
}

func (x *Unconditional) GetForwardToNumber() *v0.PhoneNumber {
	if x != nil {
		return x.ForwardToNumber
	}
	return nil
}

type Conditional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Busy        *v0.PhoneNumber `protobuf:"bytes,1,opt,name=busy,proto3" json:"busy,omitempty"`
	NoReply     *v0.PhoneNumber `protobuf:"bytes,2,opt,name=no_reply,json=noReply,proto3" json:"no_reply,omitempty"`
	Unavailable *v0.PhoneNumber `protobuf:"bytes,3,opt,name=unavailable,proto3" json:"unavailable,omitempty"`
}

func (x *Conditional) Reset() {
	*x = Conditional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conditional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conditional) ProtoMessage() {}

func (x *Conditional) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conditional.ProtoReflect.Descriptor instead.
func (*Conditional) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{3}
}

func (x *Conditional) GetBusy() *v0.PhoneNumber {
	if x != nil {
		return x.Busy
	}
	return nil
}

func (x *Conditional) GetNoReply() *v0.PhoneNumber {
	if x != nil {
		return x.NoReply
	}
	return nil
}

func (x *Conditional) GetUnavailable() *v0.PhoneNumber {
	if x != nil {
		return x.Unavailable
	}
	return nil
}

type TrunkCallForwardingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriber *v0.PhoneNumber `protobuf:"bytes,1,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
	// Types that are assignable to Type:
	//	*TrunkCallForwardingRequest_UnconditionalTrunkForwarding
	//	*TrunkCallForwardingRequest_ConditionalTrunkForwarding
	Type isTrunkCallForwardingRequest_Type `protobuf_oneof:"type"`
}

func (x *TrunkCallForwardingRequest) Reset() {
	*x = TrunkCallForwardingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrunkCallForwardingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrunkCallForwardingRequest) ProtoMessage() {}

func (x *TrunkCallForwardingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrunkCallForwardingRequest.ProtoReflect.Descriptor instead.
func (*TrunkCallForwardingRequest) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{4}
}

func (x *TrunkCallForwardingRequest) GetSubscriber() *v0.PhoneNumber {
	if x != nil {
		return x.Subscriber
	}
	return nil
}

func (m *TrunkCallForwardingRequest) GetType() isTrunkCallForwardingRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *TrunkCallForwardingRequest) GetUnconditionalTrunkForwarding() *UnconditionalTrunkForwarding {
	if x, ok := x.GetType().(*TrunkCallForwardingRequest_UnconditionalTrunkForwarding); ok {
		return x.UnconditionalTrunkForwarding
	}
	return nil
}

func (x *TrunkCallForwardingRequest) GetConditionalTrunkForwarding() *ConditionalTrunkForwarding {
	if x, ok := x.GetType().(*TrunkCallForwardingRequest_ConditionalTrunkForwarding); ok {
		return x.ConditionalTrunkForwarding
	}
	return nil
}

type isTrunkCallForwardingRequest_Type interface {
	isTrunkCallForwardingRequest_Type()
}

type TrunkCallForwardingRequest_UnconditionalTrunkForwarding struct {
	UnconditionalTrunkForwarding *UnconditionalTrunkForwarding `protobuf:"bytes,2,opt,name=unconditional_trunk_forwarding,json=unconditionalTrunkForwarding,proto3,oneof"`
}

type TrunkCallForwardingRequest_ConditionalTrunkForwarding struct {
	ConditionalTrunkForwarding *ConditionalTrunkForwarding `protobuf:"bytes,3,opt,name=conditional_trunk_forwarding,json=conditionalTrunkForwarding,proto3,oneof"`
}

func (*TrunkCallForwardingRequest_UnconditionalTrunkForwarding) isTrunkCallForwardingRequest_Type() {}

func (*TrunkCallForwardingRequest_ConditionalTrunkForwarding) isTrunkCallForwardingRequest_Type() {}

type Trunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Trunk) Reset() {
	*x = Trunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trunk) ProtoMessage() {}

func (x *Trunk) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trunk.ProtoReflect.Descriptor instead.
func (*Trunk) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{5}
}

func (x *Trunk) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnconditionalTrunkForwarding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForwardToTrunk *Trunk `protobuf:"bytes,1,opt,name=forward_to_trunk,json=forwardToTrunk,proto3" json:"forward_to_trunk,omitempty"`
}

func (x *UnconditionalTrunkForwarding) Reset() {
	*x = UnconditionalTrunkForwarding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnconditionalTrunkForwarding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnconditionalTrunkForwarding) ProtoMessage() {}

func (x *UnconditionalTrunkForwarding) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnconditionalTrunkForwarding.ProtoReflect.Descriptor instead.
func (*UnconditionalTrunkForwarding) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{6}
}

func (x *UnconditionalTrunkForwarding) GetForwardToTrunk() *Trunk {
	if x != nil {
		return x.ForwardToTrunk
	}
	return nil
}

type ConditionalTrunkForwarding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Busy        *Trunk `protobuf:"bytes,1,opt,name=busy,proto3" json:"busy,omitempty"`
	NoReply     *Trunk `protobuf:"bytes,2,opt,name=no_reply,json=noReply,proto3" json:"no_reply,omitempty"`
	Unavailable *Trunk `protobuf:"bytes,3,opt,name=unavailable,proto3" json:"unavailable,omitempty"`
}

func (x *ConditionalTrunkForwarding) Reset() {
	*x = ConditionalTrunkForwarding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionalTrunkForwarding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionalTrunkForwarding) ProtoMessage() {}

func (x *ConditionalTrunkForwarding) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionalTrunkForwarding.ProtoReflect.Descriptor instead.
func (*ConditionalTrunkForwarding) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{7}
}

func (x *ConditionalTrunkForwarding) GetBusy() *Trunk {
	if x != nil {
		return x.Busy
	}
	return nil
}

func (x *ConditionalTrunkForwarding) GetNoReply() *Trunk {
	if x != nil {
		return x.NoReply
	}
	return nil
}

func (x *ConditionalTrunkForwarding) GetUnavailable() *Trunk {
	if x != nil {
		return x.Unavailable
	}
	return nil
}

type VoicemailCallForwardingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriber *v0.PhoneNumber `protobuf:"bytes,1,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
	// Types that are assignable to Target:
	//	*VoicemailCallForwardingRequest_Default
	//	*VoicemailCallForwardingRequest_PhoneNumber
	Target isVoicemailCallForwardingRequest_Target `protobuf_oneof:"target"`
}

func (x *VoicemailCallForwardingRequest) Reset() {
	*x = VoicemailCallForwardingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoicemailCallForwardingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoicemailCallForwardingRequest) ProtoMessage() {}

func (x *VoicemailCallForwardingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoicemailCallForwardingRequest.ProtoReflect.Descriptor instead.
func (*VoicemailCallForwardingRequest) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{8}
}

func (x *VoicemailCallForwardingRequest) GetSubscriber() *v0.PhoneNumber {
	if x != nil {
		return x.Subscriber
	}
	return nil
}

func (m *VoicemailCallForwardingRequest) GetTarget() isVoicemailCallForwardingRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *VoicemailCallForwardingRequest) GetDefault() *emptypb.Empty {
	if x, ok := x.GetTarget().(*VoicemailCallForwardingRequest_Default); ok {
		return x.Default
	}
	return nil
}

func (x *VoicemailCallForwardingRequest) GetPhoneNumber() *v0.PhoneNumber {
	if x, ok := x.GetTarget().(*VoicemailCallForwardingRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return nil
}

type isVoicemailCallForwardingRequest_Target interface {
	isVoicemailCallForwardingRequest_Target()
}

type VoicemailCallForwardingRequest_Default struct {
	Default *emptypb.Empty `protobuf:"bytes,2,opt,name=default,proto3,oneof"`
}

type VoicemailCallForwardingRequest_PhoneNumber struct {
	PhoneNumber *v0.PhoneNumber `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

func (*VoicemailCallForwardingRequest_Default) isVoicemailCallForwardingRequest_Target() {}

func (*VoicemailCallForwardingRequest_PhoneNumber) isVoicemailCallForwardingRequest_Target() {}

type CallForwardingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       CallForwardingResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=wgtwo.callforward.v0.CallForwardingResponse_Status" json:"status,omitempty"`
	ErrorMessage string                        `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *CallForwardingResponse) Reset() {
	*x = CallForwardingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallForwardingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallForwardingResponse) ProtoMessage() {}

func (x *CallForwardingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_callforward_v0_callforward_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallForwardingResponse.ProtoReflect.Descriptor instead.
func (*CallForwardingResponse) Descriptor() ([]byte, []int) {
	return file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP(), []int{9}
}

func (x *CallForwardingResponse) GetStatus() CallForwardingResponse_Status {
	if x != nil {
		return x.Status
	}
	return CallForwardingResponse_UNKNOWN
}

func (x *CallForwardingResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_wgtwo_callforward_v0_callforward_proto protoreflect.FileDescriptor

var file_wgtwo_callforward_v0_callforward_proto_rawDesc = []byte{
	0x0a, 0x26, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x2f, 0x76, 0x30, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e,
	0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x77, 0x67, 0x74,
	0x77, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x21, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x30, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5c, 0x0a, 0x1c, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x22, 0xf7, 0x01, 0x0a, 0x1b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12,
	0x4b, 0x0a, 0x0d, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63,
	0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x6e,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x75,
	0x6e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x45, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x59, 0x0a, 0x0d, 0x55,
	0x6e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x11,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x6f,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb8, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x75, 0x73, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x04, 0x62, 0x75, 0x73, 0x79, 0x12, 0x37, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74,
	0x77, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6e, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0xd4, 0x02, 0x0a, 0x1a, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x43, 0x61, 0x6c, 0x6c, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x7a,
	0x0a, 0x1e, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x74, 0x72, 0x75, 0x6e, 0x6b, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63,
	0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x55, 0x6e,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x75, 0x6e, 0x6b,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x1c, 0x75, 0x6e,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x75, 0x6e, 0x6b,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x74, 0x0a, 0x1c, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x75, 0x6e, 0x6b, 0x5f,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x17, 0x0a, 0x05, 0x54, 0x72, 0x75, 0x6e,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x65, 0x0a, 0x1c, 0x55, 0x6e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x45, 0x0a, 0x10, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x5f,
	0x74, 0x72, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x67,
	0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x30, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x6f, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x22, 0xc4, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x62, 0x75, 0x73, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61,
	0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x75,
	0x6e, 0x6b, 0x52, 0x04, 0x62, 0x75, 0x73, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x67, 0x74,
	0x77, 0x6f, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x30, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x52, 0x07, 0x6e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3d, 0x0a, 0x0b, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61,
	0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x75,
	0x6e, 0x6b, 0x52, 0x0b, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0xdf, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x61, 0x6c,
	0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74,
	0x77, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0xbd, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x77,
	0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x30, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x31,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x02, 0x32, 0xd5, 0x04, 0x0a, 0x15, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x07,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x32, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e,
	0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x67,
	0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x30, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0xea, 0xb5, 0x18, 0x16, 0x63,
	0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61,
	0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f,
	0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0xea, 0xb5, 0x18, 0x18, 0x63, 0x61, 0x6c, 0x6c,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x6f, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x8a, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x54, 0x72,
	0x75, 0x6e, 0x6b, 0x12, 0x30, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61, 0x6c, 0x6c,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x6b,
	0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61,
	0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0xea, 0xb5, 0x18, 0x18, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x6f, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x95, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x61, 0x6c,
	0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x67, 0x74,
	0x77, 0x6f, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x30, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0xea, 0xb5, 0x18, 0x1b, 0x63, 0x61,
	0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x6f, 0x5f,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x70, 0x0a, 0x1c, 0x63, 0x6f, 0x6d,
	0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x63, 0x61,
	0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x42, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x74, 0x77, 0x6f, 0x2f, 0x77, 0x67, 0x74,
	0x77, 0x6f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2f, 0x63, 0x61, 0x6c,
	0x6c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_wgtwo_callforward_v0_callforward_proto_rawDescOnce sync.Once
	file_wgtwo_callforward_v0_callforward_proto_rawDescData = file_wgtwo_callforward_v0_callforward_proto_rawDesc
)

func file_wgtwo_callforward_v0_callforward_proto_rawDescGZIP() []byte {
	file_wgtwo_callforward_v0_callforward_proto_rawDescOnce.Do(func() {
		file_wgtwo_callforward_v0_callforward_proto_rawDescData = protoimpl.X.CompressGZIP(file_wgtwo_callforward_v0_callforward_proto_rawDescData)
	})
	return file_wgtwo_callforward_v0_callforward_proto_rawDescData
}

var file_wgtwo_callforward_v0_callforward_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wgtwo_callforward_v0_callforward_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_wgtwo_callforward_v0_callforward_proto_goTypes = []interface{}{
	(CallForwardingResponse_Status)(0),     // 0: wgtwo.callforward.v0.CallForwardingResponse.Status
	(*DisableCallForwardingRequest)(nil),   // 1: wgtwo.callforward.v0.DisableCallForwardingRequest
	(*NumberCallForwardingRequest)(nil),    // 2: wgtwo.callforward.v0.NumberCallForwardingRequest
	(*Unconditional)(nil),                  // 3: wgtwo.callforward.v0.Unconditional
	(*Conditional)(nil),                    // 4: wgtwo.callforward.v0.Conditional
	(*TrunkCallForwardingRequest)(nil),     // 5: wgtwo.callforward.v0.TrunkCallForwardingRequest
	(*Trunk)(nil),                          // 6: wgtwo.callforward.v0.Trunk
	(*UnconditionalTrunkForwarding)(nil),   // 7: wgtwo.callforward.v0.UnconditionalTrunkForwarding
	(*ConditionalTrunkForwarding)(nil),     // 8: wgtwo.callforward.v0.ConditionalTrunkForwarding
	(*VoicemailCallForwardingRequest)(nil), // 9: wgtwo.callforward.v0.VoicemailCallForwardingRequest
	(*CallForwardingResponse)(nil),         // 10: wgtwo.callforward.v0.CallForwardingResponse
	(*v0.PhoneNumber)(nil),                 // 11: wgtwo.common.v0.PhoneNumber
	(*emptypb.Empty)(nil),                  // 12: google.protobuf.Empty
}
var file_wgtwo_callforward_v0_callforward_proto_depIdxs = []int32{
	11, // 0: wgtwo.callforward.v0.DisableCallForwardingRequest.subscriber:type_name -> wgtwo.common.v0.PhoneNumber
	11, // 1: wgtwo.callforward.v0.NumberCallForwardingRequest.subscriber:type_name -> wgtwo.common.v0.PhoneNumber
	3,  // 2: wgtwo.callforward.v0.NumberCallForwardingRequest.unconditional:type_name -> wgtwo.callforward.v0.Unconditional
	4,  // 3: wgtwo.callforward.v0.NumberCallForwardingRequest.conditional:type_name -> wgtwo.callforward.v0.Conditional
	11, // 4: wgtwo.callforward.v0.Unconditional.forward_to_number:type_name -> wgtwo.common.v0.PhoneNumber
	11, // 5: wgtwo.callforward.v0.Conditional.busy:type_name -> wgtwo.common.v0.PhoneNumber
	11, // 6: wgtwo.callforward.v0.Conditional.no_reply:type_name -> wgtwo.common.v0.PhoneNumber
	11, // 7: wgtwo.callforward.v0.Conditional.unavailable:type_name -> wgtwo.common.v0.PhoneNumber
	11, // 8: wgtwo.callforward.v0.TrunkCallForwardingRequest.subscriber:type_name -> wgtwo.common.v0.PhoneNumber
	7,  // 9: wgtwo.callforward.v0.TrunkCallForwardingRequest.unconditional_trunk_forwarding:type_name -> wgtwo.callforward.v0.UnconditionalTrunkForwarding
	8,  // 10: wgtwo.callforward.v0.TrunkCallForwardingRequest.conditional_trunk_forwarding:type_name -> wgtwo.callforward.v0.ConditionalTrunkForwarding
	6,  // 11: wgtwo.callforward.v0.UnconditionalTrunkForwarding.forward_to_trunk:type_name -> wgtwo.callforward.v0.Trunk
	6,  // 12: wgtwo.callforward.v0.ConditionalTrunkForwarding.busy:type_name -> wgtwo.callforward.v0.Trunk
	6,  // 13: wgtwo.callforward.v0.ConditionalTrunkForwarding.no_reply:type_name -> wgtwo.callforward.v0.Trunk
	6,  // 14: wgtwo.callforward.v0.ConditionalTrunkForwarding.unavailable:type_name -> wgtwo.callforward.v0.Trunk
	11, // 15: wgtwo.callforward.v0.VoicemailCallForwardingRequest.subscriber:type_name -> wgtwo.common.v0.PhoneNumber
	12, // 16: wgtwo.callforward.v0.VoicemailCallForwardingRequest.default:type_name -> google.protobuf.Empty
	11, // 17: wgtwo.callforward.v0.VoicemailCallForwardingRequest.phone_number:type_name -> wgtwo.common.v0.PhoneNumber
	0,  // 18: wgtwo.callforward.v0.CallForwardingResponse.status:type_name -> wgtwo.callforward.v0.CallForwardingResponse.Status
	1,  // 19: wgtwo.callforward.v0.CallForwardingService.Disable:input_type -> wgtwo.callforward.v0.DisableCallForwardingRequest
	2,  // 20: wgtwo.callforward.v0.CallForwardingService.SetToNumber:input_type -> wgtwo.callforward.v0.NumberCallForwardingRequest
	5,  // 21: wgtwo.callforward.v0.CallForwardingService.SetToTrunk:input_type -> wgtwo.callforward.v0.TrunkCallForwardingRequest
	9,  // 22: wgtwo.callforward.v0.CallForwardingService.SetToVoicemail:input_type -> wgtwo.callforward.v0.VoicemailCallForwardingRequest
	10, // 23: wgtwo.callforward.v0.CallForwardingService.Disable:output_type -> wgtwo.callforward.v0.CallForwardingResponse
	10, // 24: wgtwo.callforward.v0.CallForwardingService.SetToNumber:output_type -> wgtwo.callforward.v0.CallForwardingResponse
	10, // 25: wgtwo.callforward.v0.CallForwardingService.SetToTrunk:output_type -> wgtwo.callforward.v0.CallForwardingResponse
	10, // 26: wgtwo.callforward.v0.CallForwardingService.SetToVoicemail:output_type -> wgtwo.callforward.v0.CallForwardingResponse
	23, // [23:27] is the sub-list for method output_type
	19, // [19:23] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_wgtwo_callforward_v0_callforward_proto_init() }
func file_wgtwo_callforward_v0_callforward_proto_init() {
	if File_wgtwo_callforward_v0_callforward_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableCallForwardingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberCallForwardingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unconditional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conditional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrunkCallForwardingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnconditionalTrunkForwarding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionalTrunkForwarding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoicemailCallForwardingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wgtwo_callforward_v0_callforward_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallForwardingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_wgtwo_callforward_v0_callforward_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*NumberCallForwardingRequest_Unconditional)(nil),
		(*NumberCallForwardingRequest_Conditional)(nil),
	}
	file_wgtwo_callforward_v0_callforward_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TrunkCallForwardingRequest_UnconditionalTrunkForwarding)(nil),
		(*TrunkCallForwardingRequest_ConditionalTrunkForwarding)(nil),
	}
	file_wgtwo_callforward_v0_callforward_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*VoicemailCallForwardingRequest_Default)(nil),
		(*VoicemailCallForwardingRequest_PhoneNumber)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wgtwo_callforward_v0_callforward_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wgtwo_callforward_v0_callforward_proto_goTypes,
		DependencyIndexes: file_wgtwo_callforward_v0_callforward_proto_depIdxs,
		EnumInfos:         file_wgtwo_callforward_v0_callforward_proto_enumTypes,
		MessageInfos:      file_wgtwo_callforward_v0_callforward_proto_msgTypes,
	}.Build()
	File_wgtwo_callforward_v0_callforward_proto = out.File
	file_wgtwo_callforward_v0_callforward_proto_rawDesc = nil
	file_wgtwo_callforward_v0_callforward_proto_goTypes = nil
	file_wgtwo_callforward_v0_callforward_proto_depIdxs = nil
}
