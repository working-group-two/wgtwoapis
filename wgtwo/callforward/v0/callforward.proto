// Copyright 2020 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package wgtwo.callforward.v0;

import "google/protobuf/empty.proto";
import "wgtwo/annotations/annotations.proto";
import "wgtwo/common/v0/phonenumber.proto";

option go_package = "github.com/working-group-two/wgtwoapis/wgtwo/callforward/v0";
option java_package = "com.wgtwo.api.v0.callforward";
option java_outer_classname = "CallForwardingProto";

service CallForwardingService {
  rpc Disable (DisableCallForwardingRequest) returns (CallForwardingResponse) {
    option (scope) = "callforwarding.disable";
  }
  rpc SetToNumber (NumberCallForwardingRequest) returns (CallForwardingResponse) {
  option (scope) = "callforwarding.to_number";
  }
  rpc SetToTrunk (TrunkCallForwardingRequest) returns (CallForwardingResponse) {
  option (scope) = "callforwarding.to_number";
  }
  rpc SetToVoicemail (VoicemailCallForwardingRequest) returns (CallForwardingResponse) {
    option (scope) = "callforwarding.to_voicemail";
  }
}

message DisableCallForwardingRequest {
  wgtwo.common.v0.PhoneNumber subscriber = 1;
}

message NumberCallForwardingRequest {
  wgtwo.common.v0.PhoneNumber subscriber = 1;
  oneof type {
    Unconditional unconditional = 2;
    Conditional conditional = 3;
  }
}

message Unconditional {
  wgtwo.common.v0.PhoneNumber forward_to_number = 1;
}

message Conditional {
  wgtwo.common.v0.PhoneNumber busy = 1;
  wgtwo.common.v0.PhoneNumber no_reply = 2;
  wgtwo.common.v0.PhoneNumber unavailable = 3;
}

message TrunkCallForwardingRequest {
  wgtwo.common.v0.PhoneNumber subscriber = 1;
  oneof type {
    UnconditionalTrunkForwarding unconditional_trunk_forwarding = 2;
    ConditionalTrunkForwarding conditional_trunk_forwarding = 3;
  }
}

message Trunk {
  string id = 1;
}

message UnconditionalTrunkForwarding {
  Trunk forward_to_trunk = 1;
}

message ConditionalTrunkForwarding {
  Trunk busy = 1;
  Trunk no_reply = 2;
  Trunk unavailable = 3;
}

message VoicemailCallForwardingRequest {
  wgtwo.common.v0.PhoneNumber subscriber = 1;
  oneof target {
    google.protobuf.Empty default = 2;
    wgtwo.common.v0.PhoneNumber phone_number = 3;
  }
}

message CallForwardingResponse {
  enum Status {
    UNKNOWN = 0;
    ACCEPTED = 1;
    REJECTED = 2;
  }
  Status status = 1;

  string error_message = 2;
}

