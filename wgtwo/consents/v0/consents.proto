// Copyright 2021 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
syntax = "proto3";

package wgtwo.consents.v0;

import "wgtwo/annotations/annotations.proto";
import "wgtwo/common/v0/errors.proto";
import "wgtwo/common/v0/phonenumber.proto";
import "wgtwo/common/v0/types.proto";

option go_package = "github.com/working-group-two/wgtwoapis/wgtwo/consents/v0";
option java_package = "com.wgtwo.api.v0.consent";
option java_outer_classname = "ConsentsProto";

service ConsentService {
  rpc GetConsentsForSubscription (GetConsentsForSubscriptionRequest)
      returns (GetConsentsForSubscriptionResponse) {
    option (scope) = "subscription.consent:read";
  }

  rpc CreateConsentForSubscription (CreateConsentForSubscriptionRequest)
      returns (CreateConsentForSubscriptionResponse) {
    option (scope) = "subscription.consent:write";
  }

  rpc RevokeConsentForSubscription (RevokeConsentForSubscriptionRequest)
      returns (RevokeConsentForSubscriptionResponse) {
    option (scope) = "subscription.consent:write";
  }

}

message GetConsentsForSubscriptionRequest {
  wgtwo.common.v0.SubscriptionIdentifier id = 1;
  wgtwo.common.v0.PhoneNumber phone_number = 2; // TODO to be removed
}

message GetConsentsForSubscriptionResponse {
  repeated Consent consents = 1;
  wgtwo.common.v0.StatusCode status_code = 2;
  string error_message = 3;
}

message CreateConsentForSubscriptionRequest {
  wgtwo.common.v0.SubscriptionIdentifier id = 1;
  wgtwo.common.v0.PhoneNumber phone_number = 4; // TODO to be removed
  string product_id = 2;
  map<string, string> metadata = 3;
}

message CreateConsentForSubscriptionResponse {
  wgtwo.common.v0.StatusCode status_code = 1;
  string error_message = 2;
}

message RevokeConsentForSubscriptionRequest {
  wgtwo.common.v0.SubscriptionIdentifier id = 1;
  wgtwo.common.v0.PhoneNumber phone_number = 3; // TODO to be removed
  string product_id = 2;
}

message RevokeConsentForSubscriptionResponse {
  wgtwo.common.v0.StatusCode status_code = 1;
  string error_message = 2;
}

message Consent {
  ConsentOwner owner = 1;
  string product_id = 2;
  repeated Scope scopes = 3;
  bool revokable = 4;
  map<string, string> metadata = 5;
}

message ConsentOwner {
  oneof value {
    Subscription subscription = 1;
    wgtwo.common.v0.Tenant tenant = 2;
  }
}

message Subscription {
  wgtwo.common.v0.SubscriptionIdentifier subscription_identifier = 1;
}

message Scope {
  string property = 1;
}
