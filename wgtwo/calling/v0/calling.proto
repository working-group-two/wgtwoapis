// Copyright 2020 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package wgtwo.calling.v0;

import "google/protobuf/timestamp.proto";
import "wgtwo/common/v0/phonenumber.proto";

option go_package = "github.com/working-group-two/wgtwoapis/wgtwo/calling/v0";

option java_package = "com.wgtwo.api.calling.v0";
option java_outer_classname = "CallingProto";

service CallingService {
  rpc StartCall (stream StartCallRequest) returns (stream StartCallResponse) {}
  rpc TransferCall (TransferCallRequest) returns (TransferCallResponse) {}
  rpc SendDtmf (SendDtmfRequest) returns (SendDtmfResponse) {}
  rpc HangupCall (HangupCallRequest) returns (HangupCallResponse) {}
  rpc GetTurnServers (GetTurnServersRequest) returns (GetTurnServersResponse) {}
  rpc SetIceCandidate (SendIceCandidateRequest) returns (SendIceCandidateResponse) {}
  rpc GetIceCandidate (GetIceCandidateRequest) returns (stream GetIceCandidateResponse) {}
}

message GetTurnServersRequest {
  string call_id = 1;
  wgtwo.common.v0.PhoneNumber phone_number = 2;
}

message GetTurnServersResponse {
  repeated TurnServer turn_server = 1;
}

message TurnServer {
  string url = 1;
  string username = 2;
  string credential = 3;
}

message StartCallRequest {
  string call_id = 1;
  string terminal_id = 2;
  oneof message {
    StartCallRequestInit init = 3;
    StartCallRequestUpdate update = 4;
  }
}

message StartCallRequestInit {
  wgtwo.common.v0.PhoneNumber from_number = 1;
  wgtwo.common.v0.PhoneNumber to_number = 2;
  Sdp sdp = 3;
}

message StartCallRequestUpdate {
  wgtwo.common.v0.PhoneNumber phone_number = 1;
  Sdp sdp = 2;
}

message StartCallResponse {
  string call_id = 1;
  oneof type {
    KeepAlive keep_alive = 2;
    Sdp sdp = 3;
    Error error = 4;
    Info info = 5;
  }
}

message KeepAlive {
  google.protobuf.Timestamp timestamp = 1;
}

message Sdp {
  enum Type {
    OFFER = 0;
    ANSWER = 1;
  }
  string sdp = 1;
  string ufrag = 2;
  google.protobuf.Timestamp timestamp = 3;
  Type type = 4;
}

message Error {
  int32 error_code = 1;
  string error_message = 2;
}

message Info {
  enum Message {
    UNSPECIFIED = 0;
    INITIATED = 1;
    RINGING = 2;
    ONGOING = 3;
    HANGUP_BUSY = 4;
    HANGUP = 5;
  }
  Message message = 1;
  string description = 2;
}
message TransferCallRequest {
  string call_id = 1;
  wgtwo.common.v0.PhoneNumber phone_number = 2;
  string sdp = 3;
}

message TransferCallResponse {
  string call_id = 1;
  string sdp = 2;
  string ufrag = 3;
}

message SendIceCandidateRequest {
  string call_id = 1;
  IceCandidate ice_candidate = 2;
}

message SendIceCandidateResponse {
}

message GetIceCandidateRequest {
  string call_id = 1;
  string ufrag = 2;
}

message GetIceCandidateResponse {
  string call_id = 1;
  string ufrag = 2;
  IceCandidate ice_candidate = 3;
}

message IceCandidate {
  string candidate = 1;
  int32 mline_index = 2;
  string mid = 3;
}

message HangupCallRequest {
  string call_id = 1;
  wgtwo.common.v0.PhoneNumber phone_number = 2;
}

message HangupCallResponse {
}

message SendDtmfRequest {
  enum Dtmf {
    ZERO = 0;
    ONE = 1;
    TWO = 2;
    THREE = 3;
    FOUR = 4;
    FIVE = 5;
    SIX = 6;
    SEVEN = 7;
    EIGHT = 8;
    NINE = 9;
    STAR = 10;
    HASH = 11;
  }
  string call_id = 1;
  Dtmf dtmf = 2;
}

message SendDtmfResponse {
}
