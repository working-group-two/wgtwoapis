// Copyright 2020 Working Group Two AS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package wgtwo.auth.v0;

import "google/protobuf/timestamp.proto";
import "wgtwo/common/v0/phonenumber.proto";

option go_package = "github.com/working-group-two/wgtwoapis/wgtwo/auth/v0";

option java_package = "com.wgtwo.api.auth.v0";
option java_outer_classname = "UserTokensProto";


message UserTokenMetadata {
    string human_readable_name = 1;
    string correlation_id = 2;
    string service_id = 3;
    repeated wgtwo.common.v0.PhoneNumber phone_numbers = 4;
    repeated string rights = 5;
    map<string, string> tags = 6;
    google.protobuf.Timestamp created_time = 7;
    google.protobuf.Timestamp last_used_time = 8;
}

message CreateUserTokenRequest {
    string human_name = 1;
    string correlation_id = 2;
    repeated wgtwo.common.v0.PhoneNumber phone_numbers = 3;
    repeated string rights = 4;
    map<string, string> tags = 5;
}

message CreateUserTokenResponse {
    UserTokenMetadata user_token_metadata = 1;
    string user_token = 2;
}

message ListUserTokenRequest {
    wgtwo.common.v0.PhoneNumber phone_number = 1;
}

message ListUserTokenResponse {
    repeated UserTokenMetadata user_token_metadata = 1;
}

message GetUserTokenRequest {
    string correlation_id = 1;
}

message GetUserTokenResponse {
    UserTokenMetadata user_token_metadata = 1;
}

message RevokeUserTokenRequest {
    string correlation_id = 2;
}

message RevokeUserTokenResponse {
}

service UserTokenService {
    rpc Create (CreateUserTokenRequest) returns (CreateUserTokenResponse) {}
    rpc Get (GetUserTokenRequest) returns (GetUserTokenResponse) {}
    rpc List (ListUserTokenRequest) returns (ListUserTokenResponse) {}
    rpc Revoke (RevokeUserTokenRequest) returns (RevokeUserTokenResponse) {}
}
