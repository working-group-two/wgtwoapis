// Copyright 2020 [Working Group Two]/[Cisco Systems]
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: wgtwo/events/v0/events.proto

package v0

import (
	_ "github.com/working-group-two/wgtwoapis/wgtwo/annotations"
	v0 "github.com/working-group-two/wgtwoapis/wgtwo/common/v0"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_UNSPECIFIED               EventType = 0
	EventType_VOICE_EVENT               EventType = 1
	EventType_VOICEMAIL_EVENT           EventType = 2
	EventType_LOCATION_UPDATE_EVENT     EventType = 3
	EventType_COUNTRY_CHANGE_EVENT      EventType = 4
	EventType_TOKEN_AUDIT_EVENT         EventType = 5
	EventType_SMS_EVENT                 EventType = 6
	EventType_SMS_DELIVERY_REPORT_EVENT EventType = 7
	EventType_CONSENT_REVOKE_EVENT      EventType = 8
	EventType_HANDSET_UPDATE_EVENT      EventType = 9
	EventType_FIRST_ATTACHMENT_EVENT    EventType = 10
	EventType_PERIODIC_COUNTRY_EVENT    EventType = 11
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "VOICE_EVENT",
		2:  "VOICEMAIL_EVENT",
		3:  "LOCATION_UPDATE_EVENT",
		4:  "COUNTRY_CHANGE_EVENT",
		5:  "TOKEN_AUDIT_EVENT",
		6:  "SMS_EVENT",
		7:  "SMS_DELIVERY_REPORT_EVENT",
		8:  "CONSENT_REVOKE_EVENT",
		9:  "HANDSET_UPDATE_EVENT",
		10: "FIRST_ATTACHMENT_EVENT",
		11: "PERIODIC_COUNTRY_EVENT",
	}
	EventType_value = map[string]int32{
		"UNSPECIFIED":               0,
		"VOICE_EVENT":               1,
		"VOICEMAIL_EVENT":           2,
		"LOCATION_UPDATE_EVENT":     3,
		"COUNTRY_CHANGE_EVENT":      4,
		"TOKEN_AUDIT_EVENT":         5,
		"SMS_EVENT":                 6,
		"SMS_DELIVERY_REPORT_EVENT": 7,
		"CONSENT_REVOKE_EVENT":      8,
		"HANDSET_UPDATE_EVENT":      9,
		"FIRST_ATTACHMENT_EVENT":    10,
		"PERIODIC_COUNTRY_EVENT":    11,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_wgtwo_events_v0_events_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_wgtwo_events_v0_events_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{0}
}

type VoiceEvent_VoiceEventType int32

const (
	VoiceEvent_UNSPECIFIED        VoiceEvent_VoiceEventType = 0
	VoiceEvent_CALL_INITIATED     VoiceEvent_VoiceEventType = 1
	VoiceEvent_CALL_RINGING       VoiceEvent_VoiceEventType = 2
	VoiceEvent_CALL_ANSWERED      VoiceEvent_VoiceEventType = 3
	VoiceEvent_CALL_ENDED         VoiceEvent_VoiceEventType = 4
	VoiceEvent_CALL_FWD_VOICEMAIL VoiceEvent_VoiceEventType = 5
)

// Enum value maps for VoiceEvent_VoiceEventType.
var (
	VoiceEvent_VoiceEventType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CALL_INITIATED",
		2: "CALL_RINGING",
		3: "CALL_ANSWERED",
		4: "CALL_ENDED",
		5: "CALL_FWD_VOICEMAIL",
	}
	VoiceEvent_VoiceEventType_value = map[string]int32{
		"UNSPECIFIED":        0,
		"CALL_INITIATED":     1,
		"CALL_RINGING":       2,
		"CALL_ANSWERED":      3,
		"CALL_ENDED":         4,
		"CALL_FWD_VOICEMAIL": 5,
	}
)

func (x VoiceEvent_VoiceEventType) Enum() *VoiceEvent_VoiceEventType {
	p := new(VoiceEvent_VoiceEventType)
	*p = x
	return p
}

func (x VoiceEvent_VoiceEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoiceEvent_VoiceEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_wgtwo_events_v0_events_proto_enumTypes[1].Descriptor()
}

func (VoiceEvent_VoiceEventType) Type() protoreflect.EnumType {
	return &file_wgtwo_events_v0_events_proto_enumTypes[1]
}

func (x VoiceEvent_VoiceEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoiceEvent_VoiceEventType.Descriptor instead.
func (VoiceEvent_VoiceEventType) EnumDescriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{9, 0}
}

type VoicemailEvent_VoicemailEventType int32

const (
	VoicemailEvent_UNSPECIFIED   VoicemailEvent_VoicemailEventType = 0
	VoicemailEvent_NEW_VOICEMAIL VoicemailEvent_VoicemailEventType = 1
)

// Enum value maps for VoicemailEvent_VoicemailEventType.
var (
	VoicemailEvent_VoicemailEventType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "NEW_VOICEMAIL",
	}
	VoicemailEvent_VoicemailEventType_value = map[string]int32{
		"UNSPECIFIED":   0,
		"NEW_VOICEMAIL": 1,
	}
)

func (x VoicemailEvent_VoicemailEventType) Enum() *VoicemailEvent_VoicemailEventType {
	p := new(VoicemailEvent_VoicemailEventType)
	*p = x
	return p
}

func (x VoicemailEvent_VoicemailEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoicemailEvent_VoicemailEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_wgtwo_events_v0_events_proto_enumTypes[2].Descriptor()
}

func (VoicemailEvent_VoicemailEventType) Type() protoreflect.EnumType {
	return &file_wgtwo_events_v0_events_proto_enumTypes[2]
}

func (x VoicemailEvent_VoicemailEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoicemailEvent_VoicemailEventType.Descriptor instead.
func (VoicemailEvent_VoicemailEventType) EnumDescriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{10, 0}
}

type TokenAuditEvent_Operation int32

const (
	TokenAuditEvent_UNDEFINED TokenAuditEvent_Operation = 0
	TokenAuditEvent_CREATED   TokenAuditEvent_Operation = 1
	TokenAuditEvent_MODIFIED  TokenAuditEvent_Operation = 2
	TokenAuditEvent_DELETED   TokenAuditEvent_Operation = 3
)

// Enum value maps for TokenAuditEvent_Operation.
var (
	TokenAuditEvent_Operation_name = map[int32]string{
		0: "UNDEFINED",
		1: "CREATED",
		2: "MODIFIED",
		3: "DELETED",
	}
	TokenAuditEvent_Operation_value = map[string]int32{
		"UNDEFINED": 0,
		"CREATED":   1,
		"MODIFIED":  2,
		"DELETED":   3,
	}
)

func (x TokenAuditEvent_Operation) Enum() *TokenAuditEvent_Operation {
	p := new(TokenAuditEvent_Operation)
	*p = x
	return p
}

func (x TokenAuditEvent_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenAuditEvent_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_wgtwo_events_v0_events_proto_enumTypes[3].Descriptor()
}

func (TokenAuditEvent_Operation) Type() protoreflect.EnumType {
	return &file_wgtwo_events_v0_events_proto_enumTypes[3]
}

func (x TokenAuditEvent_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenAuditEvent_Operation.Descriptor instead.
func (TokenAuditEvent_Operation) EnumDescriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{15, 0}
}

type SmsEvent_Direction int32

const (
	SmsEvent_UNKNOWN         SmsEvent_Direction = 0
	SmsEvent_FROM_SUBSCRIBER SmsEvent_Direction = 1
	SmsEvent_TO_SUBSCRIBER   SmsEvent_Direction = 2
)

// Enum value maps for SmsEvent_Direction.
var (
	SmsEvent_Direction_name = map[int32]string{
		0: "UNKNOWN",
		1: "FROM_SUBSCRIBER",
		2: "TO_SUBSCRIBER",
	}
	SmsEvent_Direction_value = map[string]int32{
		"UNKNOWN":         0,
		"FROM_SUBSCRIBER": 1,
		"TO_SUBSCRIBER":   2,
	}
)

func (x SmsEvent_Direction) Enum() *SmsEvent_Direction {
	p := new(SmsEvent_Direction)
	*p = x
	return p
}

func (x SmsEvent_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmsEvent_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_wgtwo_events_v0_events_proto_enumTypes[4].Descriptor()
}

func (SmsEvent_Direction) Type() protoreflect.EnumType {
	return &file_wgtwo_events_v0_events_proto_enumTypes[4]
}

func (x SmsEvent_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmsEvent_Direction.Descriptor instead.
func (SmsEvent_Direction) EnumDescriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{16, 0}
}

type SmsDeliveryReportEvent_Direction int32

const (
	SmsDeliveryReportEvent_DIRECTION_UNKNOWN SmsDeliveryReportEvent_Direction = 0
	SmsDeliveryReportEvent_FROM_SUBSCRIBER   SmsDeliveryReportEvent_Direction = 1
	SmsDeliveryReportEvent_TO_SUBSCRIBER     SmsDeliveryReportEvent_Direction = 2
)

// Enum value maps for SmsDeliveryReportEvent_Direction.
var (
	SmsDeliveryReportEvent_Direction_name = map[int32]string{
		0: "DIRECTION_UNKNOWN",
		1: "FROM_SUBSCRIBER",
		2: "TO_SUBSCRIBER",
	}
	SmsDeliveryReportEvent_Direction_value = map[string]int32{
		"DIRECTION_UNKNOWN": 0,
		"FROM_SUBSCRIBER":   1,
		"TO_SUBSCRIBER":     2,
	}
)

func (x SmsDeliveryReportEvent_Direction) Enum() *SmsDeliveryReportEvent_Direction {
	p := new(SmsDeliveryReportEvent_Direction)
	*p = x
	return p
}

func (x SmsDeliveryReportEvent_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmsDeliveryReportEvent_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_wgtwo_events_v0_events_proto_enumTypes[5].Descriptor()
}

func (SmsDeliveryReportEvent_Direction) Type() protoreflect.EnumType {
	return &file_wgtwo_events_v0_events_proto_enumTypes[5]
}

func (x SmsDeliveryReportEvent_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmsDeliveryReportEvent_Direction.Descriptor instead.
func (SmsDeliveryReportEvent_Direction) EnumDescriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{17, 0}
}

// Summarised status derived from the TP-Status field defined in 3GPP TS 23.040
type SmsDeliveryReportEvent_Status int32

const (
	SmsDeliveryReportEvent_STATUS_UNKNOWN SmsDeliveryReportEvent_Status = 0
	// Delivery successful. <br>
	// Derived from TP-Status values: <br>
	// - 'Short message received by the SME' <br>
	// - 'Short message forwarded by the SC to the SME but the SC is unable to confirm delivery' <br>
	// - 'Short message replaced by the SC' <br>
	SmsDeliveryReportEvent_DELIVERED SmsDeliveryReportEvent_Status = 1
	// Delivery unsuccessful but will retry. <br>
	// Derived from TP-Status values: <br>
	// - 'Congestion' <br>
	// - 'SME busy' <br>
	// - 'No response from SME' <br>
	// - 'Service rejected' <br>
	// - 'Quality of service not available' <br>
	// - 'Error in SME' <br>
	SmsDeliveryReportEvent_TEMPORARY_FAILURE SmsDeliveryReportEvent_Status = 2
	// Delivery unsuccessful and will NOT retry. <br>
	// Derived from TP-Status values: <br>
	// - 'Remote procedure error' <br>
	// - 'Incompatible destination' <br>
	// - 'Connection rejected by SME' <br>
	// - 'Not obtainable' <br>
	// - 'Quality of service not available' <br>
	// - 'No interworking available' <br>
	// - 'SM Deleted by originating SME' <br>
	// - 'SM Deleted by SC Administration' <br>
	// - 'SM does not exist' <br>
	// SC is not making any more transfer attempts after following temporary errors <br>
	// - 'Congestion' <br>
	// - 'SME busy' <br>
	// - 'No response from SME' <br>
	// - 'Service rejected' <br>
	// - 'Quality of service not available' <br>
	// - 'Error in SME' <br>
	SmsDeliveryReportEvent_FINAL_FAILURE SmsDeliveryReportEvent_Status = 3
	// Delivery unsuccessful and will NOT retry. <br>
	// Derived from TP-Status values: <br>
	// - 'SM Validity Period Expired' <br>
	SmsDeliveryReportEvent_EXPIRED SmsDeliveryReportEvent_Status = 4
)

// Enum value maps for SmsDeliveryReportEvent_Status.
var (
	SmsDeliveryReportEvent_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "DELIVERED",
		2: "TEMPORARY_FAILURE",
		3: "FINAL_FAILURE",
		4: "EXPIRED",
	}
	SmsDeliveryReportEvent_Status_value = map[string]int32{
		"STATUS_UNKNOWN":    0,
		"DELIVERED":         1,
		"TEMPORARY_FAILURE": 2,
		"FINAL_FAILURE":     3,
		"EXPIRED":           4,
	}
)

func (x SmsDeliveryReportEvent_Status) Enum() *SmsDeliveryReportEvent_Status {
	p := new(SmsDeliveryReportEvent_Status)
	*p = x
	return p
}

func (x SmsDeliveryReportEvent_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmsDeliveryReportEvent_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_wgtwo_events_v0_events_proto_enumTypes[6].Descriptor()
}

func (SmsDeliveryReportEvent_Status) Type() protoreflect.EnumType {
	return &file_wgtwo_events_v0_events_proto_enumTypes[6]
}

func (x SmsDeliveryReportEvent_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmsDeliveryReportEvent_Status.Descriptor instead.
func (SmsDeliveryReportEvent_Status) EnumDescriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{17, 1}
}

type ManualAckConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        bool                   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManualAckConfig) Reset() {
	*x = ManualAckConfig{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManualAckConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualAckConfig) ProtoMessage() {}

func (x *ManualAckConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualAckConfig.ProtoReflect.Descriptor instead.
func (*ManualAckConfig) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{0}
}

func (x *ManualAckConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ManualAckConfig) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type SubscribeEventsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  []EventType            `protobuf:"varint,1,rep,packed,name=type,proto3,enum=wgtwo.events.v0.EventType" json:"type,omitempty"`
	// Types that are valid to be assigned to StartPosition:
	//
	//	*SubscribeEventsRequest_StartAtSequence
	//	*SubscribeEventsRequest_StartAtTimestamp
	//	*SubscribeEventsRequest_StartAtTimeDelta
	//	*SubscribeEventsRequest_StartWithLastReceived
	//	*SubscribeEventsRequest_StartAtOldestPossible
	StartPosition isSubscribeEventsRequest_StartPosition `protobuf_oneof:"start_position"`
	ClientId      string                                 `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	QueueName     string                                 `protobuf:"bytes,7,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	DurableName   string                                 `protobuf:"bytes,8,opt,name=durable_name,json=durableName,proto3" json:"durable_name,omitempty"`
	MaxInFlight   uint32                                 `protobuf:"varint,9,opt,name=max_in_flight,json=maxInFlight,proto3" json:"max_in_flight,omitempty"`
	ManualAck     *ManualAckConfig                       `protobuf:"bytes,10,opt,name=manual_ack,json=manualAck,proto3" json:"manual_ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeEventsRequest) Reset() {
	*x = SubscribeEventsRequest{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEventsRequest) ProtoMessage() {}

func (x *SubscribeEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEventsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeEventsRequest) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeEventsRequest) GetType() []EventType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *SubscribeEventsRequest) GetStartPosition() isSubscribeEventsRequest_StartPosition {
	if x != nil {
		return x.StartPosition
	}
	return nil
}

func (x *SubscribeEventsRequest) GetStartAtSequence() uint64 {
	if x != nil {
		if x, ok := x.StartPosition.(*SubscribeEventsRequest_StartAtSequence); ok {
			return x.StartAtSequence
		}
	}
	return 0
}

func (x *SubscribeEventsRequest) GetStartAtTimestamp() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.StartPosition.(*SubscribeEventsRequest_StartAtTimestamp); ok {
			return x.StartAtTimestamp
		}
	}
	return nil
}

func (x *SubscribeEventsRequest) GetStartAtTimeDelta() *durationpb.Duration {
	if x != nil {
		if x, ok := x.StartPosition.(*SubscribeEventsRequest_StartAtTimeDelta); ok {
			return x.StartAtTimeDelta
		}
	}
	return nil
}

func (x *SubscribeEventsRequest) GetStartWithLastReceived() *emptypb.Empty {
	if x != nil {
		if x, ok := x.StartPosition.(*SubscribeEventsRequest_StartWithLastReceived); ok {
			return x.StartWithLastReceived
		}
	}
	return nil
}

func (x *SubscribeEventsRequest) GetStartAtOldestPossible() *emptypb.Empty {
	if x != nil {
		if x, ok := x.StartPosition.(*SubscribeEventsRequest_StartAtOldestPossible); ok {
			return x.StartAtOldestPossible
		}
	}
	return nil
}

func (x *SubscribeEventsRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SubscribeEventsRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *SubscribeEventsRequest) GetDurableName() string {
	if x != nil {
		return x.DurableName
	}
	return ""
}

func (x *SubscribeEventsRequest) GetMaxInFlight() uint32 {
	if x != nil {
		return x.MaxInFlight
	}
	return 0
}

func (x *SubscribeEventsRequest) GetManualAck() *ManualAckConfig {
	if x != nil {
		return x.ManualAck
	}
	return nil
}

type isSubscribeEventsRequest_StartPosition interface {
	isSubscribeEventsRequest_StartPosition()
}

type SubscribeEventsRequest_StartAtSequence struct {
	StartAtSequence uint64 `protobuf:"varint,2,opt,name=start_at_sequence,json=startAtSequence,proto3,oneof"`
}

type SubscribeEventsRequest_StartAtTimestamp struct {
	StartAtTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_at_timestamp,json=startAtTimestamp,proto3,oneof"`
}

type SubscribeEventsRequest_StartAtTimeDelta struct {
	StartAtTimeDelta *durationpb.Duration `protobuf:"bytes,4,opt,name=start_at_time_delta,json=startAtTimeDelta,proto3,oneof"`
}

type SubscribeEventsRequest_StartWithLastReceived struct {
	StartWithLastReceived *emptypb.Empty `protobuf:"bytes,5,opt,name=start_with_last_received,json=startWithLastReceived,proto3,oneof"`
}

type SubscribeEventsRequest_StartAtOldestPossible struct {
	StartAtOldestPossible *emptypb.Empty `protobuf:"bytes,11,opt,name=start_at_oldest_possible,json=startAtOldestPossible,proto3,oneof"`
}

func (*SubscribeEventsRequest_StartAtSequence) isSubscribeEventsRequest_StartPosition() {}

func (*SubscribeEventsRequest_StartAtTimestamp) isSubscribeEventsRequest_StartPosition() {}

func (*SubscribeEventsRequest_StartAtTimeDelta) isSubscribeEventsRequest_StartPosition() {}

func (*SubscribeEventsRequest_StartWithLastReceived) isSubscribeEventsRequest_StartPosition() {}

func (*SubscribeEventsRequest_StartAtOldestPossible) isSubscribeEventsRequest_StartPosition() {}

type SubscribeEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeEventsResponse) Reset() {
	*x = SubscribeEventsResponse{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEventsResponse) ProtoMessage() {}

func (x *SubscribeEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEventsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeEventsResponse) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeEventsResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type AckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inbox         string                 `protobuf:"bytes,1,opt,name=inbox,proto3" json:"inbox,omitempty"`
	Sequence      uint64                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckRequest) Reset() {
	*x = AckRequest{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest) ProtoMessage() {}

func (x *AckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest.ProtoReflect.Descriptor instead.
func (*AckRequest) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{3}
}

func (x *AckRequest) GetInbox() string {
	if x != nil {
		return x.Inbox
	}
	return ""
}

func (x *AckRequest) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type AckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{4}
}

type EventMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequence      uint64                 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	IsRedelivered bool                   `protobuf:"varint,2,opt,name=is_redelivered,json=isRedelivered,proto3" json:"is_redelivered,omitempty"`
	AckInbox      string                 `protobuf:"bytes,3,opt,name=ack_inbox,json=ackInbox,proto3" json:"ack_inbox,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventMetadata) Reset() {
	*x = EventMetadata{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMetadata) ProtoMessage() {}

func (x *EventMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMetadata.ProtoReflect.Descriptor instead.
func (*EventMetadata) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventMetadata) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *EventMetadata) GetIsRedelivered() bool {
	if x != nil {
		return x.IsRedelivered
	}
	return false
}

func (x *EventMetadata) GetAckInbox() string {
	if x != nil {
		return x.AckInbox
	}
	return ""
}

type Owner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PhoneNumber   *v0.PhoneNumber        `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Sub           string                 `protobuf:"bytes,2,opt,name=sub,proto3" json:"sub,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Owner) Reset() {
	*x = Owner{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{6}
}

func (x *Owner) GetPhoneNumber() *v0.PhoneNumber {
	if x != nil {
		return x.PhoneNumber
	}
	return nil
}

func (x *Owner) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

type Event struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Metadata  *EventMetadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ServiceId string                 `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*Event_VoiceEvent
	//	*Event_VoicemailEvent
	//	*Event_LocationUpdateEvent
	//	*Event_CountryChangeEvent
	//	*Event_TokenAuditEvent
	//	*Event_SmsEvent
	//	*Event_SmsDeliveryReportEvent
	//	*Event_ConsentRevokeEvent
	//	*Event_HandsetUpdateEvent
	//	*Event_FirstAttachmentEvent
	//	*Event_PeriodicCountryEvent
	Event         isEvent_Event `protobuf_oneof:"event"`
	Owner         *Owner        `protobuf:"bytes,12,opt,name=owner,proto3" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{7}
}

func (x *Event) GetMetadata() *EventMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Event) GetEvent() isEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Event) GetVoiceEvent() *VoiceEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_VoiceEvent); ok {
			return x.VoiceEvent
		}
	}
	return nil
}

func (x *Event) GetVoicemailEvent() *VoicemailEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_VoicemailEvent); ok {
			return x.VoicemailEvent
		}
	}
	return nil
}

func (x *Event) GetLocationUpdateEvent() *LocationUpdateEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_LocationUpdateEvent); ok {
			return x.LocationUpdateEvent
		}
	}
	return nil
}

func (x *Event) GetCountryChangeEvent() *CountryChangeEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_CountryChangeEvent); ok {
			return x.CountryChangeEvent
		}
	}
	return nil
}

func (x *Event) GetTokenAuditEvent() *TokenAuditEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_TokenAuditEvent); ok {
			return x.TokenAuditEvent
		}
	}
	return nil
}

func (x *Event) GetSmsEvent() *SmsEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_SmsEvent); ok {
			return x.SmsEvent
		}
	}
	return nil
}

func (x *Event) GetSmsDeliveryReportEvent() *SmsDeliveryReportEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_SmsDeliveryReportEvent); ok {
			return x.SmsDeliveryReportEvent
		}
	}
	return nil
}

func (x *Event) GetConsentRevokeEvent() *ConsentRevokeEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_ConsentRevokeEvent); ok {
			return x.ConsentRevokeEvent
		}
	}
	return nil
}

func (x *Event) GetHandsetUpdateEvent() *HandsetUpdateEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_HandsetUpdateEvent); ok {
			return x.HandsetUpdateEvent
		}
	}
	return nil
}

func (x *Event) GetFirstAttachmentEvent() *FirstAttachmentEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_FirstAttachmentEvent); ok {
			return x.FirstAttachmentEvent
		}
	}
	return nil
}

func (x *Event) GetPeriodicCountryEvent() *PeriodicCountryEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_PeriodicCountryEvent); ok {
			return x.PeriodicCountryEvent
		}
	}
	return nil
}

func (x *Event) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_VoiceEvent struct {
	VoiceEvent *VoiceEvent `protobuf:"bytes,4,opt,name=voice_event,json=voiceEvent,proto3,oneof"`
}

type Event_VoicemailEvent struct {
	VoicemailEvent *VoicemailEvent `protobuf:"bytes,5,opt,name=voicemail_event,json=voicemailEvent,proto3,oneof"`
}

type Event_LocationUpdateEvent struct {
	LocationUpdateEvent *LocationUpdateEvent `protobuf:"bytes,6,opt,name=location_update_event,json=locationUpdateEvent,proto3,oneof"`
}

type Event_CountryChangeEvent struct {
	CountryChangeEvent *CountryChangeEvent `protobuf:"bytes,7,opt,name=country_change_event,json=countryChangeEvent,proto3,oneof"`
}

type Event_TokenAuditEvent struct {
	TokenAuditEvent *TokenAuditEvent `protobuf:"bytes,8,opt,name=token_audit_event,json=tokenAuditEvent,proto3,oneof"`
}

type Event_SmsEvent struct {
	SmsEvent *SmsEvent `protobuf:"bytes,9,opt,name=sms_event,json=smsEvent,proto3,oneof"`
}

type Event_SmsDeliveryReportEvent struct {
	SmsDeliveryReportEvent *SmsDeliveryReportEvent `protobuf:"bytes,10,opt,name=sms_delivery_report_event,json=smsDeliveryReportEvent,proto3,oneof"`
}

type Event_ConsentRevokeEvent struct {
	ConsentRevokeEvent *ConsentRevokeEvent `protobuf:"bytes,11,opt,name=consent_revoke_event,json=consentRevokeEvent,proto3,oneof"`
}

type Event_HandsetUpdateEvent struct {
	HandsetUpdateEvent *HandsetUpdateEvent `protobuf:"bytes,13,opt,name=handset_update_event,json=handsetUpdateEvent,proto3,oneof"`
}

type Event_FirstAttachmentEvent struct {
	FirstAttachmentEvent *FirstAttachmentEvent `protobuf:"bytes,14,opt,name=first_attachment_event,json=firstAttachmentEvent,proto3,oneof"`
}

type Event_PeriodicCountryEvent struct {
	PeriodicCountryEvent *PeriodicCountryEvent `protobuf:"bytes,15,opt,name=periodic_country_event,json=periodicCountryEvent,proto3,oneof"`
}

func (*Event_VoiceEvent) isEvent_Event() {}

func (*Event_VoicemailEvent) isEvent_Event() {}

func (*Event_LocationUpdateEvent) isEvent_Event() {}

func (*Event_CountryChangeEvent) isEvent_Event() {}

func (*Event_TokenAuditEvent) isEvent_Event() {}

func (*Event_SmsEvent) isEvent_Event() {}

func (*Event_SmsDeliveryReportEvent) isEvent_Event() {}

func (*Event_ConsentRevokeEvent) isEvent_Event() {}

func (*Event_HandsetUpdateEvent) isEvent_Event() {}

func (*Event_FirstAttachmentEvent) isEvent_Event() {}

func (*Event_PeriodicCountryEvent) isEvent_Event() {}

type ConsentRevokeEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msisdn        *v0.PhoneNumber        `protobuf:"bytes,1,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsentRevokeEvent) Reset() {
	*x = ConsentRevokeEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsentRevokeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsentRevokeEvent) ProtoMessage() {}

func (x *ConsentRevokeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsentRevokeEvent.ProtoReflect.Descriptor instead.
func (*ConsentRevokeEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{8}
}

func (x *ConsentRevokeEvent) GetMsisdn() *v0.PhoneNumber {
	if x != nil {
		return x.Msisdn
	}
	return nil
}

type VoiceEvent struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	CallId         string                    `protobuf:"bytes,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Type           VoiceEvent_VoiceEventType `protobuf:"varint,2,opt,name=type,proto3,enum=wgtwo.events.v0.VoiceEvent_VoiceEventType" json:"type,omitempty"`
	FromNumber     *v0.PhoneNumber           `protobuf:"bytes,3,opt,name=from_number,json=fromNumber,proto3" json:"from_number,omitempty"`
	ToNumber       *v0.PhoneNumber           `protobuf:"bytes,4,opt,name=to_number,json=toNumber,proto3" json:"to_number,omitempty"`
	CallerIdHidden bool                      `protobuf:"varint,6,opt,name=caller_id_hidden,json=callerIdHidden,proto3" json:"caller_id_hidden,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VoiceEvent) Reset() {
	*x = VoiceEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceEvent) ProtoMessage() {}

func (x *VoiceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceEvent.ProtoReflect.Descriptor instead.
func (*VoiceEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{9}
}

func (x *VoiceEvent) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *VoiceEvent) GetType() VoiceEvent_VoiceEventType {
	if x != nil {
		return x.Type
	}
	return VoiceEvent_UNSPECIFIED
}

func (x *VoiceEvent) GetFromNumber() *v0.PhoneNumber {
	if x != nil {
		return x.FromNumber
	}
	return nil
}

func (x *VoiceEvent) GetToNumber() *v0.PhoneNumber {
	if x != nil {
		return x.ToNumber
	}
	return nil
}

func (x *VoiceEvent) GetCallerIdHidden() bool {
	if x != nil {
		return x.CallerIdHidden
	}
	return false
}

type VoicemailEvent struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	VoicemailId   string                            `protobuf:"bytes,1,opt,name=voicemail_id,json=voicemailId,proto3" json:"voicemail_id,omitempty"`
	Type          VoicemailEvent_VoicemailEventType `protobuf:"varint,2,opt,name=type,proto3,enum=wgtwo.events.v0.VoicemailEvent_VoicemailEventType" json:"type,omitempty"`
	FromNumber    *v0.PhoneNumber                   `protobuf:"bytes,3,opt,name=from_number,json=fromNumber,proto3" json:"from_number,omitempty"`
	ToNumber      *v0.PhoneNumber                   `protobuf:"bytes,4,opt,name=to_number,json=toNumber,proto3" json:"to_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoicemailEvent) Reset() {
	*x = VoicemailEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoicemailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoicemailEvent) ProtoMessage() {}

func (x *VoicemailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoicemailEvent.ProtoReflect.Descriptor instead.
func (*VoicemailEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{10}
}

func (x *VoicemailEvent) GetVoicemailId() string {
	if x != nil {
		return x.VoicemailId
	}
	return ""
}

func (x *VoicemailEvent) GetType() VoicemailEvent_VoicemailEventType {
	if x != nil {
		return x.Type
	}
	return VoicemailEvent_UNSPECIFIED
}

func (x *VoicemailEvent) GetFromNumber() *v0.PhoneNumber {
	if x != nil {
		return x.FromNumber
	}
	return nil
}

func (x *VoicemailEvent) GetToNumber() *v0.PhoneNumber {
	if x != nil {
		return x.ToNumber
	}
	return nil
}

type LocationUpdateEvent struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Number        *v0.PhoneNumber                `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Previous      *LocationUpdateEvent_Locations `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	Current       *LocationUpdateEvent_Locations `protobuf:"bytes,4,opt,name=current,proto3" json:"current,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationUpdateEvent) Reset() {
	*x = LocationUpdateEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateEvent) ProtoMessage() {}

func (x *LocationUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateEvent.ProtoReflect.Descriptor instead.
func (*LocationUpdateEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{11}
}

func (x *LocationUpdateEvent) GetNumber() *v0.PhoneNumber {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *LocationUpdateEvent) GetPrevious() *LocationUpdateEvent_Locations {
	if x != nil {
		return x.Previous
	}
	return nil
}

func (x *LocationUpdateEvent) GetCurrent() *LocationUpdateEvent_Locations {
	if x != nil {
		return x.Current
	}
	return nil
}

type FirstAttachmentEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        *v0.PhoneNumber        `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Imsi          *Imsi                  `protobuf:"bytes,2,opt,name=imsi,proto3" json:"imsi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirstAttachmentEvent) Reset() {
	*x = FirstAttachmentEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirstAttachmentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstAttachmentEvent) ProtoMessage() {}

func (x *FirstAttachmentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstAttachmentEvent.ProtoReflect.Descriptor instead.
func (*FirstAttachmentEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{12}
}

func (x *FirstAttachmentEvent) GetNumber() *v0.PhoneNumber {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *FirstAttachmentEvent) GetImsi() *Imsi {
	if x != nil {
		return x.Imsi
	}
	return nil
}

type PeriodicCountryEvent struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Number        *v0.PhoneNumber             `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Imsi          *Imsi                       `protobuf:"bytes,2,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Country       *CountryChangeEvent_Country `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeriodicCountryEvent) Reset() {
	*x = PeriodicCountryEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodicCountryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicCountryEvent) ProtoMessage() {}

func (x *PeriodicCountryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicCountryEvent.ProtoReflect.Descriptor instead.
func (*PeriodicCountryEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{13}
}

func (x *PeriodicCountryEvent) GetNumber() *v0.PhoneNumber {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *PeriodicCountryEvent) GetImsi() *Imsi {
	if x != nil {
		return x.Imsi
	}
	return nil
}

func (x *PeriodicCountryEvent) GetCountry() *CountryChangeEvent_Country {
	if x != nil {
		return x.Country
	}
	return nil
}

type CountryChangeEvent struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Msisdn        *v0.PhoneNumber             `protobuf:"bytes,2,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Previous      *CountryChangeEvent_Country `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	Current       *CountryChangeEvent_Country `protobuf:"bytes,4,opt,name=current,proto3" json:"current,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryChangeEvent) Reset() {
	*x = CountryChangeEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryChangeEvent) ProtoMessage() {}

func (x *CountryChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryChangeEvent.ProtoReflect.Descriptor instead.
func (*CountryChangeEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{14}
}

func (x *CountryChangeEvent) GetMsisdn() *v0.PhoneNumber {
	if x != nil {
		return x.Msisdn
	}
	return nil
}

func (x *CountryChangeEvent) GetPrevious() *CountryChangeEvent_Country {
	if x != nil {
		return x.Previous
	}
	return nil
}

func (x *CountryChangeEvent) GetCurrent() *CountryChangeEvent_Country {
	if x != nil {
		return x.Current
	}
	return nil
}

type TokenAuditEvent struct {
	state     protoimpl.MessageState    `protogen:"open.v1"`
	Operation TokenAuditEvent_Operation `protobuf:"varint,1,opt,name=operation,proto3,enum=wgtwo.events.v0.TokenAuditEvent_Operation" json:"operation,omitempty"`
	// Types that are valid to be assigned to TokenChanged:
	//
	//	*TokenAuditEvent_OperatorToken
	TokenChanged  isTokenAuditEvent_TokenChanged `protobuf_oneof:"token_changed"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenAuditEvent) Reset() {
	*x = TokenAuditEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenAuditEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenAuditEvent) ProtoMessage() {}

func (x *TokenAuditEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenAuditEvent.ProtoReflect.Descriptor instead.
func (*TokenAuditEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{15}
}

func (x *TokenAuditEvent) GetOperation() TokenAuditEvent_Operation {
	if x != nil {
		return x.Operation
	}
	return TokenAuditEvent_UNDEFINED
}

func (x *TokenAuditEvent) GetTokenChanged() isTokenAuditEvent_TokenChanged {
	if x != nil {
		return x.TokenChanged
	}
	return nil
}

func (x *TokenAuditEvent) GetOperatorToken() *TokenAuditEvent_OperatorTokenChanged {
	if x != nil {
		if x, ok := x.TokenChanged.(*TokenAuditEvent_OperatorToken); ok {
			return x.OperatorToken
		}
	}
	return nil
}

type isTokenAuditEvent_TokenChanged interface {
	isTokenAuditEvent_TokenChanged()
}

type TokenAuditEvent_OperatorToken struct {
	OperatorToken *TokenAuditEvent_OperatorTokenChanged `protobuf:"bytes,2,opt,name=operator_token,json=operatorToken,proto3,oneof"`
}

func (*TokenAuditEvent_OperatorToken) isTokenAuditEvent_TokenChanged() {}

type SmsEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Identifier referring to a unique instance of this message during its routing.
	// If the message is delivered multiple times to the same receiver, this ID will be different.
	// See uuid that is constant across all routes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to FromAddress:
	//
	//	*SmsEvent_FromE164
	//	*SmsEvent_FromNationalPhoneNumber
	//	*SmsEvent_FromTextAddress
	FromAddress isSmsEvent_FromAddress `protobuf_oneof:"from_address"`
	// Types that are valid to be assigned to ToAddress:
	//
	//	*SmsEvent_ToE164
	//	*SmsEvent_ToNationalPhoneNumber
	//	*SmsEvent_ToTextAddress
	ToAddress isSmsEvent_ToAddress `protobuf_oneof:"to_address"`
	Direction SmsEvent_Direction   `protobuf:"varint,8,opt,name=direction,proto3,enum=wgtwo.events.v0.SmsEvent_Direction" json:"direction,omitempty"`
	// Types that are valid to be assigned to Content:
	//
	//	*SmsEvent_Text
	//	*SmsEvent_Bytes
	Content isSmsEvent_Content `protobuf_oneof:"content"`
	// *
	// Unique identifier of a message.
	// If the message is delivered multiple times to the same receiver, this uuid will remain the same.
	Uuid          string `protobuf:"bytes,10,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SmsEvent) Reset() {
	*x = SmsEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SmsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsEvent) ProtoMessage() {}

func (x *SmsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsEvent.ProtoReflect.Descriptor instead.
func (*SmsEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{16}
}

func (x *SmsEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SmsEvent) GetFromAddress() isSmsEvent_FromAddress {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *SmsEvent) GetFromE164() *v0.PhoneNumber {
	if x != nil {
		if x, ok := x.FromAddress.(*SmsEvent_FromE164); ok {
			return x.FromE164
		}
	}
	return nil
}

func (x *SmsEvent) GetFromNationalPhoneNumber() *v0.NationalPhoneNumber {
	if x != nil {
		if x, ok := x.FromAddress.(*SmsEvent_FromNationalPhoneNumber); ok {
			return x.FromNationalPhoneNumber
		}
	}
	return nil
}

func (x *SmsEvent) GetFromTextAddress() *v0.TextAddress {
	if x != nil {
		if x, ok := x.FromAddress.(*SmsEvent_FromTextAddress); ok {
			return x.FromTextAddress
		}
	}
	return nil
}

func (x *SmsEvent) GetToAddress() isSmsEvent_ToAddress {
	if x != nil {
		return x.ToAddress
	}
	return nil
}

func (x *SmsEvent) GetToE164() *v0.PhoneNumber {
	if x != nil {
		if x, ok := x.ToAddress.(*SmsEvent_ToE164); ok {
			return x.ToE164
		}
	}
	return nil
}

func (x *SmsEvent) GetToNationalPhoneNumber() *v0.NationalPhoneNumber {
	if x != nil {
		if x, ok := x.ToAddress.(*SmsEvent_ToNationalPhoneNumber); ok {
			return x.ToNationalPhoneNumber
		}
	}
	return nil
}

func (x *SmsEvent) GetToTextAddress() *v0.TextAddress {
	if x != nil {
		if x, ok := x.ToAddress.(*SmsEvent_ToTextAddress); ok {
			return x.ToTextAddress
		}
	}
	return nil
}

func (x *SmsEvent) GetDirection() SmsEvent_Direction {
	if x != nil {
		return x.Direction
	}
	return SmsEvent_UNKNOWN
}

func (x *SmsEvent) GetContent() isSmsEvent_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SmsEvent) GetText() string {
	if x != nil {
		if x, ok := x.Content.(*SmsEvent_Text); ok {
			return x.Text
		}
	}
	return ""
}

func (x *SmsEvent) GetBytes() []byte {
	if x != nil {
		if x, ok := x.Content.(*SmsEvent_Bytes); ok {
			return x.Bytes
		}
	}
	return nil
}

func (x *SmsEvent) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type isSmsEvent_FromAddress interface {
	isSmsEvent_FromAddress()
}

type SmsEvent_FromE164 struct {
	FromE164 *v0.PhoneNumber `protobuf:"bytes,2,opt,name=from_e164,json=fromE164,proto3,oneof"`
}

type SmsEvent_FromNationalPhoneNumber struct {
	FromNationalPhoneNumber *v0.NationalPhoneNumber `protobuf:"bytes,3,opt,name=from_national_phone_number,json=fromNationalPhoneNumber,proto3,oneof"`
}

type SmsEvent_FromTextAddress struct {
	FromTextAddress *v0.TextAddress `protobuf:"bytes,4,opt,name=from_text_address,json=fromTextAddress,proto3,oneof"`
}

func (*SmsEvent_FromE164) isSmsEvent_FromAddress() {}

func (*SmsEvent_FromNationalPhoneNumber) isSmsEvent_FromAddress() {}

func (*SmsEvent_FromTextAddress) isSmsEvent_FromAddress() {}

type isSmsEvent_ToAddress interface {
	isSmsEvent_ToAddress()
}

type SmsEvent_ToE164 struct {
	ToE164 *v0.PhoneNumber `protobuf:"bytes,5,opt,name=to_e164,json=toE164,proto3,oneof"`
}

type SmsEvent_ToNationalPhoneNumber struct {
	ToNationalPhoneNumber *v0.NationalPhoneNumber `protobuf:"bytes,6,opt,name=to_national_phone_number,json=toNationalPhoneNumber,proto3,oneof"`
}

type SmsEvent_ToTextAddress struct {
	ToTextAddress *v0.TextAddress `protobuf:"bytes,7,opt,name=to_text_address,json=toTextAddress,proto3,oneof"`
}

func (*SmsEvent_ToE164) isSmsEvent_ToAddress() {}

func (*SmsEvent_ToNationalPhoneNumber) isSmsEvent_ToAddress() {}

func (*SmsEvent_ToTextAddress) isSmsEvent_ToAddress() {}

type isSmsEvent_Content interface {
	isSmsEvent_Content()
}

type SmsEvent_Text struct {
	Text string `protobuf:"bytes,9,opt,name=text,proto3,oneof"`
}

type SmsEvent_Bytes struct {
	Bytes []byte `protobuf:"bytes,11,opt,name=bytes,proto3,oneof"`
}

func (*SmsEvent_Text) isSmsEvent_Content() {}

func (*SmsEvent_Bytes) isSmsEvent_Content() {}

type SmsDeliveryReportEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to FromAddress:
	//
	//	*SmsDeliveryReportEvent_FromE164
	//	*SmsDeliveryReportEvent_FromNationalPhoneNumber
	//	*SmsDeliveryReportEvent_FromTextAddress
	FromAddress isSmsDeliveryReportEvent_FromAddress `protobuf_oneof:"from_address"`
	// Types that are valid to be assigned to ToAddress:
	//
	//	*SmsDeliveryReportEvent_ToE164
	//	*SmsDeliveryReportEvent_ToNationalPhoneNumber
	//	*SmsDeliveryReportEvent_ToTextAddress
	ToAddress isSmsDeliveryReportEvent_ToAddress `protobuf_oneof:"to_address"`
	Direction SmsDeliveryReportEvent_Direction   `protobuf:"varint,8,opt,name=direction,proto3,enum=wgtwo.events.v0.SmsDeliveryReportEvent_Direction" json:"direction,omitempty"`
	SmsId     string                             `protobuf:"bytes,9,opt,name=sms_id,json=smsId,proto3" json:"sms_id,omitempty"`
	// Summary of delivery status. See Status enum for details on how status is mapped.
	Status        SmsDeliveryReportEvent_Status `protobuf:"varint,10,opt,name=status,proto3,enum=wgtwo.events.v0.SmsDeliveryReportEvent_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SmsDeliveryReportEvent) Reset() {
	*x = SmsDeliveryReportEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SmsDeliveryReportEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsDeliveryReportEvent) ProtoMessage() {}

func (x *SmsDeliveryReportEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsDeliveryReportEvent.ProtoReflect.Descriptor instead.
func (*SmsDeliveryReportEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{17}
}

func (x *SmsDeliveryReportEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SmsDeliveryReportEvent) GetFromAddress() isSmsDeliveryReportEvent_FromAddress {
	if x != nil {
		return x.FromAddress
	}
	return nil
}

func (x *SmsDeliveryReportEvent) GetFromE164() *v0.PhoneNumber {
	if x != nil {
		if x, ok := x.FromAddress.(*SmsDeliveryReportEvent_FromE164); ok {
			return x.FromE164
		}
	}
	return nil
}

func (x *SmsDeliveryReportEvent) GetFromNationalPhoneNumber() *v0.NationalPhoneNumber {
	if x != nil {
		if x, ok := x.FromAddress.(*SmsDeliveryReportEvent_FromNationalPhoneNumber); ok {
			return x.FromNationalPhoneNumber
		}
	}
	return nil
}

func (x *SmsDeliveryReportEvent) GetFromTextAddress() *v0.TextAddress {
	if x != nil {
		if x, ok := x.FromAddress.(*SmsDeliveryReportEvent_FromTextAddress); ok {
			return x.FromTextAddress
		}
	}
	return nil
}

func (x *SmsDeliveryReportEvent) GetToAddress() isSmsDeliveryReportEvent_ToAddress {
	if x != nil {
		return x.ToAddress
	}
	return nil
}

func (x *SmsDeliveryReportEvent) GetToE164() *v0.PhoneNumber {
	if x != nil {
		if x, ok := x.ToAddress.(*SmsDeliveryReportEvent_ToE164); ok {
			return x.ToE164
		}
	}
	return nil
}

func (x *SmsDeliveryReportEvent) GetToNationalPhoneNumber() *v0.NationalPhoneNumber {
	if x != nil {
		if x, ok := x.ToAddress.(*SmsDeliveryReportEvent_ToNationalPhoneNumber); ok {
			return x.ToNationalPhoneNumber
		}
	}
	return nil
}

func (x *SmsDeliveryReportEvent) GetToTextAddress() *v0.TextAddress {
	if x != nil {
		if x, ok := x.ToAddress.(*SmsDeliveryReportEvent_ToTextAddress); ok {
			return x.ToTextAddress
		}
	}
	return nil
}

func (x *SmsDeliveryReportEvent) GetDirection() SmsDeliveryReportEvent_Direction {
	if x != nil {
		return x.Direction
	}
	return SmsDeliveryReportEvent_DIRECTION_UNKNOWN
}

func (x *SmsDeliveryReportEvent) GetSmsId() string {
	if x != nil {
		return x.SmsId
	}
	return ""
}

func (x *SmsDeliveryReportEvent) GetStatus() SmsDeliveryReportEvent_Status {
	if x != nil {
		return x.Status
	}
	return SmsDeliveryReportEvent_STATUS_UNKNOWN
}

type isSmsDeliveryReportEvent_FromAddress interface {
	isSmsDeliveryReportEvent_FromAddress()
}

type SmsDeliveryReportEvent_FromE164 struct {
	FromE164 *v0.PhoneNumber `protobuf:"bytes,2,opt,name=from_e164,json=fromE164,proto3,oneof"`
}

type SmsDeliveryReportEvent_FromNationalPhoneNumber struct {
	FromNationalPhoneNumber *v0.NationalPhoneNumber `protobuf:"bytes,3,opt,name=from_national_phone_number,json=fromNationalPhoneNumber,proto3,oneof"`
}

type SmsDeliveryReportEvent_FromTextAddress struct {
	FromTextAddress *v0.TextAddress `protobuf:"bytes,4,opt,name=from_text_address,json=fromTextAddress,proto3,oneof"`
}

func (*SmsDeliveryReportEvent_FromE164) isSmsDeliveryReportEvent_FromAddress() {}

func (*SmsDeliveryReportEvent_FromNationalPhoneNumber) isSmsDeliveryReportEvent_FromAddress() {}

func (*SmsDeliveryReportEvent_FromTextAddress) isSmsDeliveryReportEvent_FromAddress() {}

type isSmsDeliveryReportEvent_ToAddress interface {
	isSmsDeliveryReportEvent_ToAddress()
}

type SmsDeliveryReportEvent_ToE164 struct {
	ToE164 *v0.PhoneNumber `protobuf:"bytes,5,opt,name=to_e164,json=toE164,proto3,oneof"`
}

type SmsDeliveryReportEvent_ToNationalPhoneNumber struct {
	ToNationalPhoneNumber *v0.NationalPhoneNumber `protobuf:"bytes,6,opt,name=to_national_phone_number,json=toNationalPhoneNumber,proto3,oneof"`
}

type SmsDeliveryReportEvent_ToTextAddress struct {
	ToTextAddress *v0.TextAddress `protobuf:"bytes,7,opt,name=to_text_address,json=toTextAddress,proto3,oneof"`
}

func (*SmsDeliveryReportEvent_ToE164) isSmsDeliveryReportEvent_ToAddress() {}

func (*SmsDeliveryReportEvent_ToNationalPhoneNumber) isSmsDeliveryReportEvent_ToAddress() {}

func (*SmsDeliveryReportEvent_ToTextAddress) isSmsDeliveryReportEvent_ToAddress() {}

type ImeiSv struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Imei            string                 `protobuf:"bytes,1,opt,name=imei,proto3" json:"imei,omitempty"`
	SoftwareVersion string                 `protobuf:"bytes,2,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ImeiSv) Reset() {
	*x = ImeiSv{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImeiSv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImeiSv) ProtoMessage() {}

func (x *ImeiSv) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImeiSv.ProtoReflect.Descriptor instead.
func (*ImeiSv) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{18}
}

func (x *ImeiSv) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *ImeiSv) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

type Handset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImeiSv        *ImeiSv                `protobuf:"bytes,1,opt,name=imei_sv,json=imeiSv,proto3" json:"imei_sv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Handset) Reset() {
	*x = Handset{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Handset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handset) ProtoMessage() {}

func (x *Handset) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handset.ProtoReflect.Descriptor instead.
func (*Handset) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{19}
}

func (x *Handset) GetImeiSv() *ImeiSv {
	if x != nil {
		return x.ImeiSv
	}
	return nil
}

type HandsetUpdateEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Previous      *Handset               `protobuf:"bytes,1,opt,name=previous,proto3" json:"previous,omitempty"`
	Current       *Handset               `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	Imsi          *Imsi                  `protobuf:"bytes,3,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Number        *v0.PhoneNumber        `protobuf:"bytes,4,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandsetUpdateEvent) Reset() {
	*x = HandsetUpdateEvent{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandsetUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandsetUpdateEvent) ProtoMessage() {}

func (x *HandsetUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandsetUpdateEvent.ProtoReflect.Descriptor instead.
func (*HandsetUpdateEvent) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{20}
}

func (x *HandsetUpdateEvent) GetPrevious() *Handset {
	if x != nil {
		return x.Previous
	}
	return nil
}

func (x *HandsetUpdateEvent) GetCurrent() *Handset {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *HandsetUpdateEvent) GetImsi() *Imsi {
	if x != nil {
		return x.Imsi
	}
	return nil
}

func (x *HandsetUpdateEvent) GetNumber() *v0.PhoneNumber {
	if x != nil {
		return x.Number
	}
	return nil
}

type Imsi struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Imsi) Reset() {
	*x = Imsi{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Imsi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Imsi) ProtoMessage() {}

func (x *Imsi) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Imsi.ProtoReflect.Descriptor instead.
func (*Imsi) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{21}
}

func (x *Imsi) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// (see section 5 in Numbering, Addressing and Identification)
// A GT is a phone number formatted according to E.164 that is used to identify MSCs,
// VLRs, HLRs, SGSNs and other nodes for routing purposes.
type LocationUpdateEvent_GlobalTitle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationUpdateEvent_GlobalTitle) Reset() {
	*x = LocationUpdateEvent_GlobalTitle{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationUpdateEvent_GlobalTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateEvent_GlobalTitle) ProtoMessage() {}

func (x *LocationUpdateEvent_GlobalTitle) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateEvent_GlobalTitle.ProtoReflect.Descriptor instead.
func (*LocationUpdateEvent_GlobalTitle) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{11, 0}
}

func (x *LocationUpdateEvent_GlobalTitle) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Fully Qualified Domain Name
// The format commonly used for representing an MME address
type LocationUpdateEvent_Fqdn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationUpdateEvent_Fqdn) Reset() {
	*x = LocationUpdateEvent_Fqdn{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationUpdateEvent_Fqdn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateEvent_Fqdn) ProtoMessage() {}

func (x *LocationUpdateEvent_Fqdn) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateEvent_Fqdn.ProtoReflect.Descriptor instead.
func (*LocationUpdateEvent_Fqdn) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{11, 1}
}

func (x *LocationUpdateEvent_Fqdn) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type LocationUpdateEvent_Locations struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Msc           *LocationUpdateEvent_GlobalTitle `protobuf:"bytes,1,opt,name=msc,proto3" json:"msc,omitempty"`
	Vlr           *LocationUpdateEvent_GlobalTitle `protobuf:"bytes,2,opt,name=vlr,proto3" json:"vlr,omitempty"`
	Sgsn          *LocationUpdateEvent_GlobalTitle `protobuf:"bytes,3,opt,name=sgsn,proto3" json:"sgsn,omitempty"`
	Mme           *LocationUpdateEvent_Fqdn        `protobuf:"bytes,4,opt,name=mme,proto3" json:"mme,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationUpdateEvent_Locations) Reset() {
	*x = LocationUpdateEvent_Locations{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationUpdateEvent_Locations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateEvent_Locations) ProtoMessage() {}

func (x *LocationUpdateEvent_Locations) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateEvent_Locations.ProtoReflect.Descriptor instead.
func (*LocationUpdateEvent_Locations) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{11, 2}
}

func (x *LocationUpdateEvent_Locations) GetMsc() *LocationUpdateEvent_GlobalTitle {
	if x != nil {
		return x.Msc
	}
	return nil
}

func (x *LocationUpdateEvent_Locations) GetVlr() *LocationUpdateEvent_GlobalTitle {
	if x != nil {
		return x.Vlr
	}
	return nil
}

func (x *LocationUpdateEvent_Locations) GetSgsn() *LocationUpdateEvent_GlobalTitle {
	if x != nil {
		return x.Sgsn
	}
	return nil
}

func (x *LocationUpdateEvent_Locations) GetMme() *LocationUpdateEvent_Fqdn {
	if x != nil {
		return x.Mme
	}
	return nil
}

type CountryChangeEvent_Country struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryChangeEvent_Country) Reset() {
	*x = CountryChangeEvent_Country{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryChangeEvent_Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryChangeEvent_Country) ProtoMessage() {}

func (x *CountryChangeEvent_Country) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryChangeEvent_Country.ProtoReflect.Descriptor instead.
func (*CountryChangeEvent_Country) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CountryChangeEvent_Country) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CountryChangeEvent_Country) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TokenAuditEvent_OperatorTokenMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rights        []string               `protobuf:"bytes,3,rep,name=rights,proto3" json:"rights,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenAuditEvent_OperatorTokenMetadata) Reset() {
	*x = TokenAuditEvent_OperatorTokenMetadata{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenAuditEvent_OperatorTokenMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenAuditEvent_OperatorTokenMetadata) ProtoMessage() {}

func (x *TokenAuditEvent_OperatorTokenMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenAuditEvent_OperatorTokenMetadata.ProtoReflect.Descriptor instead.
func (*TokenAuditEvent_OperatorTokenMetadata) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{15, 0}
}

func (x *TokenAuditEvent_OperatorTokenMetadata) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TokenAuditEvent_OperatorTokenMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TokenAuditEvent_OperatorTokenMetadata) GetRights() []string {
	if x != nil {
		return x.Rights
	}
	return nil
}

type TokenAuditEvent_OperatorTokenChanged struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	New           *TokenAuditEvent_OperatorTokenMetadata `protobuf:"bytes,1,opt,name=new,proto3" json:"new,omitempty"`
	Old           *TokenAuditEvent_OperatorTokenMetadata `protobuf:"bytes,2,opt,name=old,proto3" json:"old,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenAuditEvent_OperatorTokenChanged) Reset() {
	*x = TokenAuditEvent_OperatorTokenChanged{}
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenAuditEvent_OperatorTokenChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenAuditEvent_OperatorTokenChanged) ProtoMessage() {}

func (x *TokenAuditEvent_OperatorTokenChanged) ProtoReflect() protoreflect.Message {
	mi := &file_wgtwo_events_v0_events_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenAuditEvent_OperatorTokenChanged.ProtoReflect.Descriptor instead.
func (*TokenAuditEvent_OperatorTokenChanged) Descriptor() ([]byte, []int) {
	return file_wgtwo_events_v0_events_proto_rawDescGZIP(), []int{15, 1}
}

func (x *TokenAuditEvent_OperatorTokenChanged) GetNew() *TokenAuditEvent_OperatorTokenMetadata {
	if x != nil {
		return x.New
	}
	return nil
}

func (x *TokenAuditEvent_OperatorTokenChanged) GetOld() *TokenAuditEvent_OperatorTokenMetadata {
	if x != nil {
		return x.Old
	}
	return nil
}

var File_wgtwo_events_v0_events_proto protoreflect.FileDescriptor

const file_wgtwo_events_v0_events_proto_rawDesc = "" +
	"\n" +
	"\x1cwgtwo/events/v0/events.proto\x12\x0fwgtwo.events.v0\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#wgtwo/annotations/annotations.proto\x1a!wgtwo/common/v0/phonenumber.proto\"^\n" +
	"\x0fManualAckConfig\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\x123\n" +
	"\atimeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\x8a\x05\n" +
	"\x16SubscribeEventsRequest\x12.\n" +
	"\x04type\x18\x01 \x03(\x0e2\x1a.wgtwo.events.v0.EventTypeR\x04type\x12,\n" +
	"\x11start_at_sequence\x18\x02 \x01(\x04H\x00R\x0fstartAtSequence\x12J\n" +
	"\x12start_at_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x10startAtTimestamp\x12J\n" +
	"\x13start_at_time_delta\x18\x04 \x01(\v2\x19.google.protobuf.DurationH\x00R\x10startAtTimeDelta\x12Q\n" +
	"\x18start_with_last_received\x18\x05 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x15startWithLastReceived\x12Q\n" +
	"\x18start_at_oldest_possible\x18\v \x01(\v2\x16.google.protobuf.EmptyH\x00R\x15startAtOldestPossible\x12\x1b\n" +
	"\tclient_id\x18\x06 \x01(\tR\bclientId\x12\x1d\n" +
	"\n" +
	"queue_name\x18\a \x01(\tR\tqueueName\x12!\n" +
	"\fdurable_name\x18\b \x01(\tR\vdurableName\x12\"\n" +
	"\rmax_in_flight\x18\t \x01(\rR\vmaxInFlight\x12?\n" +
	"\n" +
	"manual_ack\x18\n" +
	" \x01(\v2 .wgtwo.events.v0.ManualAckConfigR\tmanualAckB\x10\n" +
	"\x0estart_position\"G\n" +
	"\x17SubscribeEventsResponse\x12,\n" +
	"\x05event\x18\x01 \x01(\v2\x16.wgtwo.events.v0.EventR\x05event\">\n" +
	"\n" +
	"AckRequest\x12\x14\n" +
	"\x05inbox\x18\x01 \x01(\tR\x05inbox\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\"\r\n" +
	"\vAckResponse\"o\n" +
	"\rEventMetadata\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\x04R\bsequence\x12%\n" +
	"\x0eis_redelivered\x18\x02 \x01(\bR\risRedelivered\x12\x1b\n" +
	"\tack_inbox\x18\x03 \x01(\tR\backInbox\"Z\n" +
	"\x05Owner\x12?\n" +
	"\fphone_number\x18\x01 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\vphoneNumber\x12\x10\n" +
	"\x03sub\x18\x02 \x01(\tR\x03sub\"\xf4\b\n" +
	"\x05Event\x12:\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1e.wgtwo.events.v0.EventMetadataR\bmetadata\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1d\n" +
	"\n" +
	"service_id\x18\x03 \x01(\tR\tserviceId\x12>\n" +
	"\vvoice_event\x18\x04 \x01(\v2\x1b.wgtwo.events.v0.VoiceEventH\x00R\n" +
	"voiceEvent\x12J\n" +
	"\x0fvoicemail_event\x18\x05 \x01(\v2\x1f.wgtwo.events.v0.VoicemailEventH\x00R\x0evoicemailEvent\x12Z\n" +
	"\x15location_update_event\x18\x06 \x01(\v2$.wgtwo.events.v0.LocationUpdateEventH\x00R\x13locationUpdateEvent\x12W\n" +
	"\x14country_change_event\x18\a \x01(\v2#.wgtwo.events.v0.CountryChangeEventH\x00R\x12countryChangeEvent\x12N\n" +
	"\x11token_audit_event\x18\b \x01(\v2 .wgtwo.events.v0.TokenAuditEventH\x00R\x0ftokenAuditEvent\x128\n" +
	"\tsms_event\x18\t \x01(\v2\x19.wgtwo.events.v0.SmsEventH\x00R\bsmsEvent\x12d\n" +
	"\x19sms_delivery_report_event\x18\n" +
	" \x01(\v2'.wgtwo.events.v0.SmsDeliveryReportEventH\x00R\x16smsDeliveryReportEvent\x12W\n" +
	"\x14consent_revoke_event\x18\v \x01(\v2#.wgtwo.events.v0.ConsentRevokeEventH\x00R\x12consentRevokeEvent\x12W\n" +
	"\x14handset_update_event\x18\r \x01(\v2#.wgtwo.events.v0.HandsetUpdateEventH\x00R\x12handsetUpdateEvent\x12]\n" +
	"\x16first_attachment_event\x18\x0e \x01(\v2%.wgtwo.events.v0.FirstAttachmentEventH\x00R\x14firstAttachmentEvent\x12]\n" +
	"\x16periodic_country_event\x18\x0f \x01(\v2%.wgtwo.events.v0.PeriodicCountryEventH\x00R\x14periodicCountryEvent\x12,\n" +
	"\x05owner\x18\f \x01(\v2\x16.wgtwo.events.v0.OwnerR\x05ownerB\a\n" +
	"\x05event\"J\n" +
	"\x12ConsentRevokeEvent\x124\n" +
	"\x06msisdn\x18\x01 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\x06msisdn\"\x9b\x03\n" +
	"\n" +
	"VoiceEvent\x12\x17\n" +
	"\acall_id\x18\x01 \x01(\tR\x06callId\x12>\n" +
	"\x04type\x18\x02 \x01(\x0e2*.wgtwo.events.v0.VoiceEvent.VoiceEventTypeR\x04type\x12=\n" +
	"\vfrom_number\x18\x03 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\n" +
	"fromNumber\x129\n" +
	"\tto_number\x18\x04 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\btoNumber\x12(\n" +
	"\x10caller_id_hidden\x18\x06 \x01(\bR\x0ecallerIdHidden\"\x82\x01\n" +
	"\x0eVoiceEventType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eCALL_INITIATED\x10\x01\x12\x10\n" +
	"\fCALL_RINGING\x10\x02\x12\x11\n" +
	"\rCALL_ANSWERED\x10\x03\x12\x0e\n" +
	"\n" +
	"CALL_ENDED\x10\x04\x12\x16\n" +
	"\x12CALL_FWD_VOICEMAIL\x10\x05J\x04\b\x05\x10\x06R\x05owner\"\xaf\x02\n" +
	"\x0eVoicemailEvent\x12!\n" +
	"\fvoicemail_id\x18\x01 \x01(\tR\vvoicemailId\x12F\n" +
	"\x04type\x18\x02 \x01(\x0e22.wgtwo.events.v0.VoicemailEvent.VoicemailEventTypeR\x04type\x12=\n" +
	"\vfrom_number\x18\x03 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\n" +
	"fromNumber\x129\n" +
	"\tto_number\x18\x04 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\btoNumber\"8\n" +
	"\x12VoicemailEventType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x11\n" +
	"\rNEW_VOICEMAIL\x10\x01\"\xc3\x04\n" +
	"\x13LocationUpdateEvent\x124\n" +
	"\x06number\x18\x02 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\x06number\x12J\n" +
	"\bprevious\x18\x03 \x01(\v2..wgtwo.events.v0.LocationUpdateEvent.LocationsR\bprevious\x12H\n" +
	"\acurrent\x18\x04 \x01(\v2..wgtwo.events.v0.LocationUpdateEvent.LocationsR\acurrent\x1a#\n" +
	"\vGlobalTitle\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x1a\x1c\n" +
	"\x04Fqdn\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x1a\x96\x02\n" +
	"\tLocations\x12B\n" +
	"\x03msc\x18\x01 \x01(\v20.wgtwo.events.v0.LocationUpdateEvent.GlobalTitleR\x03msc\x12B\n" +
	"\x03vlr\x18\x02 \x01(\v20.wgtwo.events.v0.LocationUpdateEvent.GlobalTitleR\x03vlr\x12D\n" +
	"\x04sgsn\x18\x03 \x01(\v20.wgtwo.events.v0.LocationUpdateEvent.GlobalTitleR\x04sgsn\x12;\n" +
	"\x03mme\x18\x04 \x01(\v2).wgtwo.events.v0.LocationUpdateEvent.FqdnR\x03mmeJ\x04\b\x01\x10\x02\"w\n" +
	"\x14FirstAttachmentEvent\x124\n" +
	"\x06number\x18\x01 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\x06number\x12)\n" +
	"\x04imsi\x18\x02 \x01(\v2\x15.wgtwo.events.v0.ImsiR\x04imsi\"\xbe\x01\n" +
	"\x14PeriodicCountryEvent\x124\n" +
	"\x06number\x18\x01 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\x06number\x12)\n" +
	"\x04imsi\x18\x02 \x01(\v2\x15.wgtwo.events.v0.ImsiR\x04imsi\x12E\n" +
	"\acountry\x18\x03 \x01(\v2+.wgtwo.events.v0.CountryChangeEvent.CountryR\acountry\"\x93\x02\n" +
	"\x12CountryChangeEvent\x124\n" +
	"\x06msisdn\x18\x02 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\x06msisdn\x12G\n" +
	"\bprevious\x18\x03 \x01(\v2+.wgtwo.events.v0.CountryChangeEvent.CountryR\bprevious\x12E\n" +
	"\acurrent\x18\x04 \x01(\v2+.wgtwo.events.v0.CountryChangeEvent.CountryR\acurrent\x1a1\n" +
	"\aCountry\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04nameJ\x04\b\x01\x10\x02\"\x9f\x04\n" +
	"\x0fTokenAuditEvent\x12H\n" +
	"\toperation\x18\x01 \x01(\x0e2*.wgtwo.events.v0.TokenAuditEvent.OperationR\toperation\x12^\n" +
	"\x0eoperator_token\x18\x02 \x01(\v25.wgtwo.events.v0.TokenAuditEvent.OperatorTokenChangedH\x00R\roperatorToken\x1a`\n" +
	"\x15OperatorTokenMetadata\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06rights\x18\x03 \x03(\tR\x06rights\x1a\xaa\x01\n" +
	"\x14OperatorTokenChanged\x12H\n" +
	"\x03new\x18\x01 \x01(\v26.wgtwo.events.v0.TokenAuditEvent.OperatorTokenMetadataR\x03new\x12H\n" +
	"\x03old\x18\x02 \x01(\v26.wgtwo.events.v0.TokenAuditEvent.OperatorTokenMetadataR\x03old\"B\n" +
	"\tOperation\x12\r\n" +
	"\tUNDEFINED\x10\x00\x12\v\n" +
	"\aCREATED\x10\x01\x12\f\n" +
	"\bMODIFIED\x10\x02\x12\v\n" +
	"\aDELETED\x10\x03B\x0f\n" +
	"\rtoken_changed\"\xda\x05\n" +
	"\bSmsEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12;\n" +
	"\tfrom_e164\x18\x02 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberH\x00R\bfromE164\x12c\n" +
	"\x1afrom_national_phone_number\x18\x03 \x01(\v2$.wgtwo.common.v0.NationalPhoneNumberH\x00R\x17fromNationalPhoneNumber\x12J\n" +
	"\x11from_text_address\x18\x04 \x01(\v2\x1c.wgtwo.common.v0.TextAddressH\x00R\x0ffromTextAddress\x127\n" +
	"\ato_e164\x18\x05 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberH\x01R\x06toE164\x12_\n" +
	"\x18to_national_phone_number\x18\x06 \x01(\v2$.wgtwo.common.v0.NationalPhoneNumberH\x01R\x15toNationalPhoneNumber\x12F\n" +
	"\x0fto_text_address\x18\a \x01(\v2\x1c.wgtwo.common.v0.TextAddressH\x01R\rtoTextAddress\x12A\n" +
	"\tdirection\x18\b \x01(\x0e2#.wgtwo.events.v0.SmsEvent.DirectionR\tdirection\x12\x14\n" +
	"\x04text\x18\t \x01(\tH\x02R\x04text\x12\x16\n" +
	"\x05bytes\x18\v \x01(\fH\x02R\x05bytes\x12\x12\n" +
	"\x04uuid\x18\n" +
	" \x01(\tR\x04uuid\"@\n" +
	"\tDirection\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x13\n" +
	"\x0fFROM_SUBSCRIBER\x10\x01\x12\x11\n" +
	"\rTO_SUBSCRIBER\x10\x02B\x0e\n" +
	"\ffrom_addressB\f\n" +
	"\n" +
	"to_addressB\t\n" +
	"\acontent\"\xf6\x06\n" +
	"\x16SmsDeliveryReportEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12;\n" +
	"\tfrom_e164\x18\x02 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberH\x00R\bfromE164\x12c\n" +
	"\x1afrom_national_phone_number\x18\x03 \x01(\v2$.wgtwo.common.v0.NationalPhoneNumberH\x00R\x17fromNationalPhoneNumber\x12J\n" +
	"\x11from_text_address\x18\x04 \x01(\v2\x1c.wgtwo.common.v0.TextAddressH\x00R\x0ffromTextAddress\x127\n" +
	"\ato_e164\x18\x05 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberH\x01R\x06toE164\x12_\n" +
	"\x18to_national_phone_number\x18\x06 \x01(\v2$.wgtwo.common.v0.NationalPhoneNumberH\x01R\x15toNationalPhoneNumber\x12F\n" +
	"\x0fto_text_address\x18\a \x01(\v2\x1c.wgtwo.common.v0.TextAddressH\x01R\rtoTextAddress\x12O\n" +
	"\tdirection\x18\b \x01(\x0e21.wgtwo.events.v0.SmsDeliveryReportEvent.DirectionR\tdirection\x12\x15\n" +
	"\x06sms_id\x18\t \x01(\tR\x05smsId\x12F\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2..wgtwo.events.v0.SmsDeliveryReportEvent.StatusR\x06status\"J\n" +
	"\tDirection\x12\x15\n" +
	"\x11DIRECTION_UNKNOWN\x10\x00\x12\x13\n" +
	"\x0fFROM_SUBSCRIBER\x10\x01\x12\x11\n" +
	"\rTO_SUBSCRIBER\x10\x02\"b\n" +
	"\x06Status\x12\x12\n" +
	"\x0eSTATUS_UNKNOWN\x10\x00\x12\r\n" +
	"\tDELIVERED\x10\x01\x12\x15\n" +
	"\x11TEMPORARY_FAILURE\x10\x02\x12\x11\n" +
	"\rFINAL_FAILURE\x10\x03\x12\v\n" +
	"\aEXPIRED\x10\x04B\x0e\n" +
	"\ffrom_addressB\f\n" +
	"\n" +
	"to_address\"G\n" +
	"\x06ImeiSv\x12\x12\n" +
	"\x04imei\x18\x01 \x01(\tR\x04imei\x12)\n" +
	"\x10software_version\x18\x02 \x01(\tR\x0fsoftwareVersion\";\n" +
	"\aHandset\x120\n" +
	"\aimei_sv\x18\x01 \x01(\v2\x17.wgtwo.events.v0.ImeiSvR\x06imeiSv\"\xdf\x01\n" +
	"\x12HandsetUpdateEvent\x124\n" +
	"\bprevious\x18\x01 \x01(\v2\x18.wgtwo.events.v0.HandsetR\bprevious\x122\n" +
	"\acurrent\x18\x02 \x01(\v2\x18.wgtwo.events.v0.HandsetR\acurrent\x12)\n" +
	"\x04imsi\x18\x03 \x01(\v2\x15.wgtwo.events.v0.ImsiR\x04imsi\x124\n" +
	"\x06number\x18\x04 \x01(\v2\x1c.wgtwo.common.v0.PhoneNumberR\x06number\"\x1c\n" +
	"\x04Imsi\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value*\xa8\x02\n" +
	"\tEventType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vVOICE_EVENT\x10\x01\x12\x13\n" +
	"\x0fVOICEMAIL_EVENT\x10\x02\x12\x19\n" +
	"\x15LOCATION_UPDATE_EVENT\x10\x03\x12\x18\n" +
	"\x14COUNTRY_CHANGE_EVENT\x10\x04\x12\x15\n" +
	"\x11TOKEN_AUDIT_EVENT\x10\x05\x12\r\n" +
	"\tSMS_EVENT\x10\x06\x12\x1d\n" +
	"\x19SMS_DELIVERY_REPORT_EVENT\x10\a\x12\x18\n" +
	"\x14CONSENT_REVOKE_EVENT\x10\b\x12\x18\n" +
	"\x14HANDSET_UPDATE_EVENT\x10\t\x12\x1a\n" +
	"\x16FIRST_ATTACHMENT_EVENT\x10\n" +
	"\x12\x1a\n" +
	"\x16PERIODIC_COUNTRY_EVENT\x10\v2\xbf\x01\n" +
	"\rEventsService\x12f\n" +
	"\tSubscribe\x12'.wgtwo.events.v0.SubscribeEventsRequest\x1a(.wgtwo.events.v0.SubscribeEventsResponse\"\x04\xea\xb5\x18\x000\x01\x12F\n" +
	"\x03Ack\x12\x1b.wgtwo.events.v0.AckRequest\x1a\x1c.wgtwo.events.v0.AckResponse\"\x04\xea\xb5\x18\x00B\xb8\x01\n" +
	"\x13com.wgtwo.events.v0B\vEventsProtoP\x01Z6github.com/working-group-two/wgtwoapis/wgtwo/events/v0\xa2\x02\x03WEV\xaa\x02\x0fWgtwo.Events.V0\xca\x02\x0fWgtwo\\Events\\V0\xe2\x02\x1bWgtwo\\Events\\V0\\GPBMetadata\xea\x02\x11Wgtwo::Events::V0b\x06proto3"

var (
	file_wgtwo_events_v0_events_proto_rawDescOnce sync.Once
	file_wgtwo_events_v0_events_proto_rawDescData []byte
)

func file_wgtwo_events_v0_events_proto_rawDescGZIP() []byte {
	file_wgtwo_events_v0_events_proto_rawDescOnce.Do(func() {
		file_wgtwo_events_v0_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wgtwo_events_v0_events_proto_rawDesc), len(file_wgtwo_events_v0_events_proto_rawDesc)))
	})
	return file_wgtwo_events_v0_events_proto_rawDescData
}

var file_wgtwo_events_v0_events_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_wgtwo_events_v0_events_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_wgtwo_events_v0_events_proto_goTypes = []any{
	(EventType)(0),                                // 0: wgtwo.events.v0.EventType
	(VoiceEvent_VoiceEventType)(0),                // 1: wgtwo.events.v0.VoiceEvent.VoiceEventType
	(VoicemailEvent_VoicemailEventType)(0),        // 2: wgtwo.events.v0.VoicemailEvent.VoicemailEventType
	(TokenAuditEvent_Operation)(0),                // 3: wgtwo.events.v0.TokenAuditEvent.Operation
	(SmsEvent_Direction)(0),                       // 4: wgtwo.events.v0.SmsEvent.Direction
	(SmsDeliveryReportEvent_Direction)(0),         // 5: wgtwo.events.v0.SmsDeliveryReportEvent.Direction
	(SmsDeliveryReportEvent_Status)(0),            // 6: wgtwo.events.v0.SmsDeliveryReportEvent.Status
	(*ManualAckConfig)(nil),                       // 7: wgtwo.events.v0.ManualAckConfig
	(*SubscribeEventsRequest)(nil),                // 8: wgtwo.events.v0.SubscribeEventsRequest
	(*SubscribeEventsResponse)(nil),               // 9: wgtwo.events.v0.SubscribeEventsResponse
	(*AckRequest)(nil),                            // 10: wgtwo.events.v0.AckRequest
	(*AckResponse)(nil),                           // 11: wgtwo.events.v0.AckResponse
	(*EventMetadata)(nil),                         // 12: wgtwo.events.v0.EventMetadata
	(*Owner)(nil),                                 // 13: wgtwo.events.v0.Owner
	(*Event)(nil),                                 // 14: wgtwo.events.v0.Event
	(*ConsentRevokeEvent)(nil),                    // 15: wgtwo.events.v0.ConsentRevokeEvent
	(*VoiceEvent)(nil),                            // 16: wgtwo.events.v0.VoiceEvent
	(*VoicemailEvent)(nil),                        // 17: wgtwo.events.v0.VoicemailEvent
	(*LocationUpdateEvent)(nil),                   // 18: wgtwo.events.v0.LocationUpdateEvent
	(*FirstAttachmentEvent)(nil),                  // 19: wgtwo.events.v0.FirstAttachmentEvent
	(*PeriodicCountryEvent)(nil),                  // 20: wgtwo.events.v0.PeriodicCountryEvent
	(*CountryChangeEvent)(nil),                    // 21: wgtwo.events.v0.CountryChangeEvent
	(*TokenAuditEvent)(nil),                       // 22: wgtwo.events.v0.TokenAuditEvent
	(*SmsEvent)(nil),                              // 23: wgtwo.events.v0.SmsEvent
	(*SmsDeliveryReportEvent)(nil),                // 24: wgtwo.events.v0.SmsDeliveryReportEvent
	(*ImeiSv)(nil),                                // 25: wgtwo.events.v0.ImeiSv
	(*Handset)(nil),                               // 26: wgtwo.events.v0.Handset
	(*HandsetUpdateEvent)(nil),                    // 27: wgtwo.events.v0.HandsetUpdateEvent
	(*Imsi)(nil),                                  // 28: wgtwo.events.v0.Imsi
	(*LocationUpdateEvent_GlobalTitle)(nil),       // 29: wgtwo.events.v0.LocationUpdateEvent.GlobalTitle
	(*LocationUpdateEvent_Fqdn)(nil),              // 30: wgtwo.events.v0.LocationUpdateEvent.Fqdn
	(*LocationUpdateEvent_Locations)(nil),         // 31: wgtwo.events.v0.LocationUpdateEvent.Locations
	(*CountryChangeEvent_Country)(nil),            // 32: wgtwo.events.v0.CountryChangeEvent.Country
	(*TokenAuditEvent_OperatorTokenMetadata)(nil), // 33: wgtwo.events.v0.TokenAuditEvent.OperatorTokenMetadata
	(*TokenAuditEvent_OperatorTokenChanged)(nil),  // 34: wgtwo.events.v0.TokenAuditEvent.OperatorTokenChanged
	(*durationpb.Duration)(nil),                   // 35: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),                 // 36: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                         // 37: google.protobuf.Empty
	(*v0.PhoneNumber)(nil),                        // 38: wgtwo.common.v0.PhoneNumber
	(*v0.NationalPhoneNumber)(nil),                // 39: wgtwo.common.v0.NationalPhoneNumber
	(*v0.TextAddress)(nil),                        // 40: wgtwo.common.v0.TextAddress
}
var file_wgtwo_events_v0_events_proto_depIdxs = []int32{
	35, // 0: wgtwo.events.v0.ManualAckConfig.timeout:type_name -> google.protobuf.Duration
	0,  // 1: wgtwo.events.v0.SubscribeEventsRequest.type:type_name -> wgtwo.events.v0.EventType
	36, // 2: wgtwo.events.v0.SubscribeEventsRequest.start_at_timestamp:type_name -> google.protobuf.Timestamp
	35, // 3: wgtwo.events.v0.SubscribeEventsRequest.start_at_time_delta:type_name -> google.protobuf.Duration
	37, // 4: wgtwo.events.v0.SubscribeEventsRequest.start_with_last_received:type_name -> google.protobuf.Empty
	37, // 5: wgtwo.events.v0.SubscribeEventsRequest.start_at_oldest_possible:type_name -> google.protobuf.Empty
	7,  // 6: wgtwo.events.v0.SubscribeEventsRequest.manual_ack:type_name -> wgtwo.events.v0.ManualAckConfig
	14, // 7: wgtwo.events.v0.SubscribeEventsResponse.event:type_name -> wgtwo.events.v0.Event
	38, // 8: wgtwo.events.v0.Owner.phone_number:type_name -> wgtwo.common.v0.PhoneNumber
	12, // 9: wgtwo.events.v0.Event.metadata:type_name -> wgtwo.events.v0.EventMetadata
	36, // 10: wgtwo.events.v0.Event.timestamp:type_name -> google.protobuf.Timestamp
	16, // 11: wgtwo.events.v0.Event.voice_event:type_name -> wgtwo.events.v0.VoiceEvent
	17, // 12: wgtwo.events.v0.Event.voicemail_event:type_name -> wgtwo.events.v0.VoicemailEvent
	18, // 13: wgtwo.events.v0.Event.location_update_event:type_name -> wgtwo.events.v0.LocationUpdateEvent
	21, // 14: wgtwo.events.v0.Event.country_change_event:type_name -> wgtwo.events.v0.CountryChangeEvent
	22, // 15: wgtwo.events.v0.Event.token_audit_event:type_name -> wgtwo.events.v0.TokenAuditEvent
	23, // 16: wgtwo.events.v0.Event.sms_event:type_name -> wgtwo.events.v0.SmsEvent
	24, // 17: wgtwo.events.v0.Event.sms_delivery_report_event:type_name -> wgtwo.events.v0.SmsDeliveryReportEvent
	15, // 18: wgtwo.events.v0.Event.consent_revoke_event:type_name -> wgtwo.events.v0.ConsentRevokeEvent
	27, // 19: wgtwo.events.v0.Event.handset_update_event:type_name -> wgtwo.events.v0.HandsetUpdateEvent
	19, // 20: wgtwo.events.v0.Event.first_attachment_event:type_name -> wgtwo.events.v0.FirstAttachmentEvent
	20, // 21: wgtwo.events.v0.Event.periodic_country_event:type_name -> wgtwo.events.v0.PeriodicCountryEvent
	13, // 22: wgtwo.events.v0.Event.owner:type_name -> wgtwo.events.v0.Owner
	38, // 23: wgtwo.events.v0.ConsentRevokeEvent.msisdn:type_name -> wgtwo.common.v0.PhoneNumber
	1,  // 24: wgtwo.events.v0.VoiceEvent.type:type_name -> wgtwo.events.v0.VoiceEvent.VoiceEventType
	38, // 25: wgtwo.events.v0.VoiceEvent.from_number:type_name -> wgtwo.common.v0.PhoneNumber
	38, // 26: wgtwo.events.v0.VoiceEvent.to_number:type_name -> wgtwo.common.v0.PhoneNumber
	2,  // 27: wgtwo.events.v0.VoicemailEvent.type:type_name -> wgtwo.events.v0.VoicemailEvent.VoicemailEventType
	38, // 28: wgtwo.events.v0.VoicemailEvent.from_number:type_name -> wgtwo.common.v0.PhoneNumber
	38, // 29: wgtwo.events.v0.VoicemailEvent.to_number:type_name -> wgtwo.common.v0.PhoneNumber
	38, // 30: wgtwo.events.v0.LocationUpdateEvent.number:type_name -> wgtwo.common.v0.PhoneNumber
	31, // 31: wgtwo.events.v0.LocationUpdateEvent.previous:type_name -> wgtwo.events.v0.LocationUpdateEvent.Locations
	31, // 32: wgtwo.events.v0.LocationUpdateEvent.current:type_name -> wgtwo.events.v0.LocationUpdateEvent.Locations
	38, // 33: wgtwo.events.v0.FirstAttachmentEvent.number:type_name -> wgtwo.common.v0.PhoneNumber
	28, // 34: wgtwo.events.v0.FirstAttachmentEvent.imsi:type_name -> wgtwo.events.v0.Imsi
	38, // 35: wgtwo.events.v0.PeriodicCountryEvent.number:type_name -> wgtwo.common.v0.PhoneNumber
	28, // 36: wgtwo.events.v0.PeriodicCountryEvent.imsi:type_name -> wgtwo.events.v0.Imsi
	32, // 37: wgtwo.events.v0.PeriodicCountryEvent.country:type_name -> wgtwo.events.v0.CountryChangeEvent.Country
	38, // 38: wgtwo.events.v0.CountryChangeEvent.msisdn:type_name -> wgtwo.common.v0.PhoneNumber
	32, // 39: wgtwo.events.v0.CountryChangeEvent.previous:type_name -> wgtwo.events.v0.CountryChangeEvent.Country
	32, // 40: wgtwo.events.v0.CountryChangeEvent.current:type_name -> wgtwo.events.v0.CountryChangeEvent.Country
	3,  // 41: wgtwo.events.v0.TokenAuditEvent.operation:type_name -> wgtwo.events.v0.TokenAuditEvent.Operation
	34, // 42: wgtwo.events.v0.TokenAuditEvent.operator_token:type_name -> wgtwo.events.v0.TokenAuditEvent.OperatorTokenChanged
	38, // 43: wgtwo.events.v0.SmsEvent.from_e164:type_name -> wgtwo.common.v0.PhoneNumber
	39, // 44: wgtwo.events.v0.SmsEvent.from_national_phone_number:type_name -> wgtwo.common.v0.NationalPhoneNumber
	40, // 45: wgtwo.events.v0.SmsEvent.from_text_address:type_name -> wgtwo.common.v0.TextAddress
	38, // 46: wgtwo.events.v0.SmsEvent.to_e164:type_name -> wgtwo.common.v0.PhoneNumber
	39, // 47: wgtwo.events.v0.SmsEvent.to_national_phone_number:type_name -> wgtwo.common.v0.NationalPhoneNumber
	40, // 48: wgtwo.events.v0.SmsEvent.to_text_address:type_name -> wgtwo.common.v0.TextAddress
	4,  // 49: wgtwo.events.v0.SmsEvent.direction:type_name -> wgtwo.events.v0.SmsEvent.Direction
	38, // 50: wgtwo.events.v0.SmsDeliveryReportEvent.from_e164:type_name -> wgtwo.common.v0.PhoneNumber
	39, // 51: wgtwo.events.v0.SmsDeliveryReportEvent.from_national_phone_number:type_name -> wgtwo.common.v0.NationalPhoneNumber
	40, // 52: wgtwo.events.v0.SmsDeliveryReportEvent.from_text_address:type_name -> wgtwo.common.v0.TextAddress
	38, // 53: wgtwo.events.v0.SmsDeliveryReportEvent.to_e164:type_name -> wgtwo.common.v0.PhoneNumber
	39, // 54: wgtwo.events.v0.SmsDeliveryReportEvent.to_national_phone_number:type_name -> wgtwo.common.v0.NationalPhoneNumber
	40, // 55: wgtwo.events.v0.SmsDeliveryReportEvent.to_text_address:type_name -> wgtwo.common.v0.TextAddress
	5,  // 56: wgtwo.events.v0.SmsDeliveryReportEvent.direction:type_name -> wgtwo.events.v0.SmsDeliveryReportEvent.Direction
	6,  // 57: wgtwo.events.v0.SmsDeliveryReportEvent.status:type_name -> wgtwo.events.v0.SmsDeliveryReportEvent.Status
	25, // 58: wgtwo.events.v0.Handset.imei_sv:type_name -> wgtwo.events.v0.ImeiSv
	26, // 59: wgtwo.events.v0.HandsetUpdateEvent.previous:type_name -> wgtwo.events.v0.Handset
	26, // 60: wgtwo.events.v0.HandsetUpdateEvent.current:type_name -> wgtwo.events.v0.Handset
	28, // 61: wgtwo.events.v0.HandsetUpdateEvent.imsi:type_name -> wgtwo.events.v0.Imsi
	38, // 62: wgtwo.events.v0.HandsetUpdateEvent.number:type_name -> wgtwo.common.v0.PhoneNumber
	29, // 63: wgtwo.events.v0.LocationUpdateEvent.Locations.msc:type_name -> wgtwo.events.v0.LocationUpdateEvent.GlobalTitle
	29, // 64: wgtwo.events.v0.LocationUpdateEvent.Locations.vlr:type_name -> wgtwo.events.v0.LocationUpdateEvent.GlobalTitle
	29, // 65: wgtwo.events.v0.LocationUpdateEvent.Locations.sgsn:type_name -> wgtwo.events.v0.LocationUpdateEvent.GlobalTitle
	30, // 66: wgtwo.events.v0.LocationUpdateEvent.Locations.mme:type_name -> wgtwo.events.v0.LocationUpdateEvent.Fqdn
	33, // 67: wgtwo.events.v0.TokenAuditEvent.OperatorTokenChanged.new:type_name -> wgtwo.events.v0.TokenAuditEvent.OperatorTokenMetadata
	33, // 68: wgtwo.events.v0.TokenAuditEvent.OperatorTokenChanged.old:type_name -> wgtwo.events.v0.TokenAuditEvent.OperatorTokenMetadata
	8,  // 69: wgtwo.events.v0.EventsService.Subscribe:input_type -> wgtwo.events.v0.SubscribeEventsRequest
	10, // 70: wgtwo.events.v0.EventsService.Ack:input_type -> wgtwo.events.v0.AckRequest
	9,  // 71: wgtwo.events.v0.EventsService.Subscribe:output_type -> wgtwo.events.v0.SubscribeEventsResponse
	11, // 72: wgtwo.events.v0.EventsService.Ack:output_type -> wgtwo.events.v0.AckResponse
	71, // [71:73] is the sub-list for method output_type
	69, // [69:71] is the sub-list for method input_type
	69, // [69:69] is the sub-list for extension type_name
	69, // [69:69] is the sub-list for extension extendee
	0,  // [0:69] is the sub-list for field type_name
}

func init() { file_wgtwo_events_v0_events_proto_init() }
func file_wgtwo_events_v0_events_proto_init() {
	if File_wgtwo_events_v0_events_proto != nil {
		return
	}
	file_wgtwo_events_v0_events_proto_msgTypes[1].OneofWrappers = []any{
		(*SubscribeEventsRequest_StartAtSequence)(nil),
		(*SubscribeEventsRequest_StartAtTimestamp)(nil),
		(*SubscribeEventsRequest_StartAtTimeDelta)(nil),
		(*SubscribeEventsRequest_StartWithLastReceived)(nil),
		(*SubscribeEventsRequest_StartAtOldestPossible)(nil),
	}
	file_wgtwo_events_v0_events_proto_msgTypes[7].OneofWrappers = []any{
		(*Event_VoiceEvent)(nil),
		(*Event_VoicemailEvent)(nil),
		(*Event_LocationUpdateEvent)(nil),
		(*Event_CountryChangeEvent)(nil),
		(*Event_TokenAuditEvent)(nil),
		(*Event_SmsEvent)(nil),
		(*Event_SmsDeliveryReportEvent)(nil),
		(*Event_ConsentRevokeEvent)(nil),
		(*Event_HandsetUpdateEvent)(nil),
		(*Event_FirstAttachmentEvent)(nil),
		(*Event_PeriodicCountryEvent)(nil),
	}
	file_wgtwo_events_v0_events_proto_msgTypes[15].OneofWrappers = []any{
		(*TokenAuditEvent_OperatorToken)(nil),
	}
	file_wgtwo_events_v0_events_proto_msgTypes[16].OneofWrappers = []any{
		(*SmsEvent_FromE164)(nil),
		(*SmsEvent_FromNationalPhoneNumber)(nil),
		(*SmsEvent_FromTextAddress)(nil),
		(*SmsEvent_ToE164)(nil),
		(*SmsEvent_ToNationalPhoneNumber)(nil),
		(*SmsEvent_ToTextAddress)(nil),
		(*SmsEvent_Text)(nil),
		(*SmsEvent_Bytes)(nil),
	}
	file_wgtwo_events_v0_events_proto_msgTypes[17].OneofWrappers = []any{
		(*SmsDeliveryReportEvent_FromE164)(nil),
		(*SmsDeliveryReportEvent_FromNationalPhoneNumber)(nil),
		(*SmsDeliveryReportEvent_FromTextAddress)(nil),
		(*SmsDeliveryReportEvent_ToE164)(nil),
		(*SmsDeliveryReportEvent_ToNationalPhoneNumber)(nil),
		(*SmsDeliveryReportEvent_ToTextAddress)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wgtwo_events_v0_events_proto_rawDesc), len(file_wgtwo_events_v0_events_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wgtwo_events_v0_events_proto_goTypes,
		DependencyIndexes: file_wgtwo_events_v0_events_proto_depIdxs,
		EnumInfos:         file_wgtwo_events_v0_events_proto_enumTypes,
		MessageInfos:      file_wgtwo_events_v0_events_proto_msgTypes,
	}.Build()
	File_wgtwo_events_v0_events_proto = out.File
	file_wgtwo_events_v0_events_proto_goTypes = nil
	file_wgtwo_events_v0_events_proto_depIdxs = nil
}
